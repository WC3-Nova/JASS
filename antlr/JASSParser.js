// Generated from JASS.g4 by ANTLR 4.7
// jshint ignore: start
var antlr4 = require('antlr4/index');
var JASSListener = require('./JASSListener').JASSListener;
var JASSVisitor = require('./JASSVisitor').JASSVisitor;

var grammarFileName = "JASS.g4";

var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0003;\u032d\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t",
    "\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004",
    "\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0004",
    "\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004",
    "\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014\t",
    "\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017\u0004",
    "\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b\t",
    "\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e\u0004",
    "\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#\t#\u0004$\t$\u0004",
    "%\t%\u0003\u0002\u0007\u0002L\n\u0002\f\u0002\u000e\u0002O\u000b\u0002",
    "\u0003\u0002\u0003\u0002\u0005\u0002S\n\u0002\u0003\u0002\u0003\u0002",
    "\u0007\u0002W\n\u0002\f\u0002\u000e\u0002Z\u000b\u0002\u0007\u0002\\",
    "\n\u0002\f\u0002\u000e\u0002_\u000b\u0002\u0003\u0002\u0007\u0002b\n",
    "\u0002\f\u0002\u000e\u0002e\u000b\u0002\u0003\u0002\u0003\u0002\u0005",
    "\u0002i\n\u0002\u0003\u0002\u0003\u0002\u0007\u0002m\n\u0002\f\u0002",
    "\u000e\u0002p\u000b\u0002\u0007\u0002r\n\u0002\f\u0002\u000e\u0002u",
    "\u000b\u0002\u0003\u0002\u0005\u0002x\n\u0002\u0003\u0002\u0003\u0002",
    "\u0005\u0002|\n\u0002\u0003\u0002\u0003\u0002\u0007\u0002\u0080\n\u0002",
    "\f\u0002\u000e\u0002\u0083\u000b\u0002\u0003\u0002\u0003\u0002\u0005",
    "\u0002\u0087\n\u0002\u0003\u0002\u0003\u0002\u0007\u0002\u008b\n\u0002",
    "\f\u0002\u000e\u0002\u008e\u000b\u0002\u0007\u0002\u0090\n\u0002\f\u0002",
    "\u000e\u0002\u0093\u000b\u0002\u0003\u0002\u0007\u0002\u0096\n\u0002",
    "\f\u0002\u000e\u0002\u0099\u000b\u0002\u0003\u0002\u0003\u0002\u0005",
    "\u0002\u009d\n\u0002\u0003\u0002\u0003\u0002\u0007\u0002\u00a1\n\u0002",
    "\f\u0002\u000e\u0002\u00a4\u000b\u0002\u0007\u0002\u00a6\n\u0002\f\u0002",
    "\u000e\u0002\u00a9\u000b\u0002\u0003\u0002\u0007\u0002\u00ac\n\u0002",
    "\f\u0002\u000e\u0002\u00af\u000b\u0002\u0003\u0003\u0003\u0003\u0005",
    "\u0003\u00b3\n\u0003\u0003\u0003\u0003\u0003\u0007\u0003\u00b7\n\u0003",
    "\f\u0003\u000e\u0003\u00ba\u000b\u0003\u0003\u0003\u0003\u0003\u0005",
    "\u0003\u00be\n\u0003\u0003\u0003\u0003\u0003\u0007\u0003\u00c2\n\u0003",
    "\f\u0003\u000e\u0003\u00c5\u000b\u0003\u0007\u0003\u00c7\n\u0003\f\u0003",
    "\u000e\u0003\u00ca\u000b\u0003\u0003\u0003\u0007\u0003\u00cd\n\u0003",
    "\f\u0003\u000e\u0003\u00d0\u000b\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0005",
    "\u0006\u00e0\n\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006",
    "\u0005\u0006\u00e6\n\u0006\u0003\u0006\u0003\u0006\u0005\u0006\u00ea",
    "\n\u0006\u0003\u0006\u0005\u0006\u00ed\n\u0006\u0005\u0006\u00ef\n\u0006",
    "\u0003\u0007\u0003\u0007\u0005\u0007\u00f3\n\u0007\u0003\u0007\u0003",
    "\u0007\u0005\u0007\u00f7\n\u0007\u0003\u0007\u0003\u0007\u0003\b\u0003",
    "\b\u0003\b\u0005\b\u00fe\n\b\u0003\b\u0003\b\u0005\b\u0102\n\b\u0003",
    "\b\u0003\b\u0005\b\u0106\n\b\u0003\b\u0003\b\u0005\b\u010a\n\b\u0003",
    "\b\u0003\b\u0005\b\u010e\n\b\u0003\b\u0003\b\u0005\b\u0112\n\b\u0003",
    "\b\u0003\b\u0003\b\u0003\b\u0005\b\u0118\n\b\u0003\b\u0003\b\u0005\b",
    "\u011c\n\b\u0003\b\u0003\b\u0005\b\u0120\n\b\u0003\b\u0003\b\u0003\b",
    "\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0005\b\u012b\n\b\u0003",
    "\b\u0003\b\u0005\b\u012f\n\b\u0003\b\u0003\b\u0005\b\u0133\n\b\u0003",
    "\b\u0003\b\u0003\b\u0005\b\u0138\n\b\u0003\b\u0003\b\u0003\b\u0003\b",
    "\u0003\b\u0003\b\u0003\b\u0005\b\u0141\n\b\u0003\b\u0003\b\u0005\b\u0145",
    "\n\b\u0003\b\u0003\b\u0005\b\u0149\n\b\u0003\b\u0003\b\u0003\b\u0003",
    "\b\u0003\b\u0003\b\u0003\b\u0005\b\u0152\n\b\u0003\b\u0003\b\u0005\b",
    "\u0156\n\b\u0003\b\u0003\b\u0003\b\u0005\b\u015b\n\b\u0003\b\u0003\b",
    "\u0005\b\u015f\n\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0005\b\u0166",
    "\n\b\u0003\b\u0003\b\u0005\b\u016a\n\b\u0003\b\u0003\b\u0005\b\u016e",
    "\n\b\u0003\b\u0003\b\u0007\b\u0172\n\b\f\b\u000e\b\u0175\u000b\b\u0003",
    "\t\u0003\t\u0005\t\u0179\n\t\u0003\t\u0003\t\u0005\t\u017d\n\t\u0003",
    "\t\u0003\t\u0005\t\u0181\n\t\u0003\t\u0003\t\u0003\n\u0003\n\u0005\n",
    "\u0187\n\n\u0003\n\u0003\n\u0005\n\u018b\n\n\u0003\n\u0007\n\u018e\n",
    "\n\f\n\u000e\n\u0191\u000b\n\u0005\n\u0193\n\n\u0003\u000b\u0003\u000b",
    "\u0003\u000b\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\f\u0003\f",
    "\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0005\r\u01a3\n\r\u0003\u000e",
    "\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e",
    "\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e",
    "\u0005\u000e\u01b2\n\u000e\u0003\u000e\u0003\u000e\u0005\u000e\u01b6",
    "\n\u000e\u0003\u000e\u0005\u000e\u01b9\n\u000e\u0005\u000e\u01bb\n\u000e",
    "\u0003\u000f\u0003\u000f\u0005\u000f\u01bf\n\u000f\u0003\u000f\u0003",
    "\u000f\u0007\u000f\u01c3\n\u000f\f\u000f\u000e\u000f\u01c6\u000b\u000f",
    "\u0003\u000f\u0007\u000f\u01c9\n\u000f\f\u000f\u000e\u000f\u01cc\u000b",
    "\u000f\u0003\u0010\u0003\u0010\u0005\u0010\u01d0\n\u0010\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0005\u0011",
    "\u01d8\n\u0011\u0003\u0012\u0003\u0012\u0005\u0012\u01dc\n\u0012\u0003",
    "\u0012\u0003\u0012\u0007\u0012\u01e0\n\u0012\f\u0012\u000e\u0012\u01e3",
    "\u000b\u0012\u0003\u0012\u0007\u0012\u01e6\n\u0012\f\u0012\u000e\u0012",
    "\u01e9\u000b\u0012\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003",
    "\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0005\u0014\u01f3\n\u0014",
    "\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0005\u0014\u01f9\n",
    "\u0014\u0003\u0014\u0005\u0014\u01fc\n\u0014\u0003\u0014\u0003\u0014",
    "\u0005\u0014\u0200\n\u0014\u0003\u0014\u0003\u0014\u0003\u0015\u0003",
    "\u0015\u0005\u0015\u0206\n\u0015\u0003\u0016\u0003\u0016\u0005\u0016",
    "\u020a\n\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u020e\n\u0016\u0003",
    "\u0016\u0003\u0016\u0005\u0016\u0212\n\u0016\u0003\u0016\u0003\u0016",
    "\u0007\u0016\u0216\n\u0016\f\u0016\u000e\u0016\u0219\u000b\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0005\u0017\u021f\n\u0017",
    "\u0003\u0017\u0003\u0017\u0005\u0017\u0223\n\u0017\u0003\u0017\u0003",
    "\u0017\u0005\u0017\u0227\n\u0017\u0003\u0017\u0003\u0017\u0007\u0017",
    "\u022b\n\u0017\f\u0017\u000e\u0017\u022e\u000b\u0017\u0003\u0017\u0005",
    "\u0017\u0231\n\u0017\u0003\u0017\u0007\u0017\u0234\n\u0017\f\u0017\u000e",
    "\u0017\u0237\u000b\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017",
    "\u0005\u0017\u023d\n\u0017\u0003\u0017\u0005\u0017\u0240\n\u0017\u0003",
    "\u0017\u0003\u0017\u0005\u0017\u0244\n\u0017\u0003\u0017\u0003\u0017",
    "\u0007\u0017\u0248\n\u0017\f\u0017\u000e\u0017\u024b\u000b\u0017\u0003",
    "\u0017\u0005\u0017\u024e\n\u0017\u0003\u0017\u0007\u0017\u0251\n\u0017",
    "\f\u0017\u000e\u0017\u0254\u000b\u0017\u0007\u0017\u0256\n\u0017\f\u0017",
    "\u000e\u0017\u0259\u000b\u0017\u0003\u0017\u0003\u0017\u0005\u0017\u025d",
    "\n\u0017\u0003\u0017\u0003\u0017\u0007\u0017\u0261\n\u0017\f\u0017\u000e",
    "\u0017\u0264\u000b\u0017\u0003\u0017\u0005\u0017\u0267\n\u0017\u0003",
    "\u0017\u0007\u0017\u026a\n\u0017\f\u0017\u000e\u0017\u026d\u000b\u0017",
    "\u0005\u0017\u026f\n\u0017\u0003\u0017\u0007\u0017\u0272\n\u0017\f\u0017",
    "\u000e\u0017\u0275\u000b\u0017\u0003\u0017\u0003\u0017\u0003\u0018\u0003",
    "\u0018\u0005\u0018\u027b\n\u0018\u0003\u0018\u0003\u0018\u0007\u0018",
    "\u027f\n\u0018\f\u0018\u000e\u0018\u0282\u000b\u0018\u0003\u0018\u0003",
    "\u0018\u0005\u0018\u0286\n\u0018\u0003\u0018\u0003\u0018\u0005\u0018",
    "\u028a\n\u0018\u0003\u0018\u0007\u0018\u028d\n\u0018\f\u0018\u000e\u0018",
    "\u0290\u000b\u0018\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003",
    "\u0019\u0003\u0019\u0003\u0019\u0005\u0019\u0299\n\u0019\u0003\u0019",
    "\u0003\u0019\u0005\u0019\u029d\n\u0019\u0003\u0019\u0003\u0019\u0005",
    "\u0019\u02a1\n\u0019\u0003\u001a\u0003\u001a\u0003\u001a\u0007\u001a",
    "\u02a6\n\u001a\f\u001a\u000e\u001a\u02a9\u000b\u001a\u0003\u001a\u0007",
    "\u001a\u02ac\n\u001a\f\u001a\u000e\u001a\u02af\u000b\u001a\u0003\u001b",
    "\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c\u0005\u001c",
    "\u02b7\n\u001c\u0005\u001c\u02b9\n\u001c\u0003\u001d\u0003\u001d\u0003",
    "\u001e\u0005\u001e\u02be\n\u001e\u0003\u001e\u0003\u001e\u0003\u001e",
    "\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e",
    "\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001f\u0003\u001f\u0005\u001f",
    "\u02ce\n\u001f\u0003\u001f\u0003\u001f\u0007\u001f\u02d2\n\u001f\f\u001f",
    "\u000e\u001f\u02d5\u000b\u001f\u0003\u001f\u0003\u001f\u0005\u001f\u02d9",
    "\n\u001f\u0003\u001f\u0003\u001f\u0005\u001f\u02dd\n\u001f\u0003\u001f",
    "\u0007\u001f\u02e0\n\u001f\f\u001f\u000e\u001f\u02e3\u000b\u001f\u0003",
    "\u001f\u0003\u001f\u0003 \u0003 \u0005 \u02e9\n \u0003!\u0003!\u0003",
    "!\u0005!\u02ee\n!\u0003!\u0003!\u0005!\u02f2\n!\u0003!\u0007!\u02f5",
    "\n!\f!\u000e!\u02f8\u000b!\u0005!\u02fa\n!\u0003\"\u0003\"\u0003\"\u0003",
    "\"\u0003#\u0005#\u0301\n#\u0003#\u0005#\u0304\n#\u0003#\u0003#\u0007",
    "#\u0308\n#\f#\u000e#\u030b\u000b#\u0003#\u0005#\u030e\n#\u0003#\u0005",
    "#\u0311\n#\u0005#\u0313\n#\u0003$\u0003$\u0003$\u0003$\u0003$\u0003",
    "$\u0003$\u0003$\u0003%\u0003%\u0005%\u031f\n%\u0003%\u0003%\u0003%\u0003",
    "%\u0003%\u0003%\u0003%\u0003%\u0003%\u0003%\u0003%\u0003%\u0003%\u0002",
    "\u0003\u000e&\u0002\u0004\u0006\b\n\f\u000e\u0010\u0012\u0014\u0016",
    "\u0018\u001a\u001c\u001e \"$&(*,.02468:<>@BDFH\u0002\b\u0003\u00028",
    "9\u0003\u000388\u0003\u0002\n\u000b\u0003\u0002\r\u000e\u0004\u0002",
    "\r\u000f::\u0003\u0002\u0010\u0015\u0002\u03a0\u0002M\u0003\u0002\u0002",
    "\u0002\u0004\u00b0\u0003\u0002\u0002\u0002\u0006\u00d3\u0003\u0002\u0002",
    "\u0002\b\u00d5\u0003\u0002\u0002\u0002\n\u00ee\u0003\u0002\u0002\u0002",
    "\f\u00f0\u0003\u0002\u0002\u0002\u000e\u0148\u0003\u0002\u0002\u0002",
    "\u0010\u0176\u0003\u0002\u0002\u0002\u0012\u0192\u0003\u0002\u0002\u0002",
    "\u0014\u0194\u0003\u0002\u0002\u0002\u0016\u0199\u0003\u0002\u0002\u0002",
    "\u0018\u01a2\u0003\u0002\u0002\u0002\u001a\u01a4\u0003\u0002\u0002\u0002",
    "\u001c\u01bc\u0003\u0002\u0002\u0002\u001e\u01cf\u0003\u0002\u0002\u0002",
    " \u01d7\u0003\u0002\u0002\u0002\"\u01d9\u0003\u0002\u0002\u0002$\u01ea",
    "\u0003\u0002\u0002\u0002&\u01ee\u0003\u0002\u0002\u0002(\u0205\u0003",
    "\u0002\u0002\u0002*\u0207\u0003\u0002\u0002\u0002,\u021c\u0003\u0002",
    "\u0002\u0002.\u0278\u0003\u0002\u0002\u00020\u0293\u0003\u0002\u0002",
    "\u00022\u02a2\u0003\u0002\u0002\u00024\u02b0\u0003\u0002\u0002\u0002",
    "6\u02b2\u0003\u0002\u0002\u00028\u02ba\u0003\u0002\u0002\u0002:\u02bd",
    "\u0003\u0002\u0002\u0002<\u02cb\u0003\u0002\u0002\u0002>\u02e8\u0003",
    "\u0002\u0002\u0002@\u02f9\u0003\u0002\u0002\u0002B\u02fb\u0003\u0002",
    "\u0002\u0002D\u0312\u0003\u0002\u0002\u0002F\u0314\u0003\u0002\u0002",
    "\u0002H\u031e\u0003\u0002\u0002\u0002JL\t\u0002\u0002\u0002KJ\u0003",
    "\u0002\u0002\u0002LO\u0003\u0002\u0002\u0002MK\u0003\u0002\u0002\u0002",
    "MN\u0003\u0002\u0002\u0002N]\u0003\u0002\u0002\u0002OM\u0003\u0002\u0002",
    "\u0002PR\u0005F$\u0002QS\u00079\u0002\u0002RQ\u0003\u0002\u0002\u0002",
    "RS\u0003\u0002\u0002\u0002ST\u0003\u0002\u0002\u0002TX\u00078\u0002",
    "\u0002UW\t\u0002\u0002\u0002VU\u0003\u0002\u0002\u0002WZ\u0003\u0002",
    "\u0002\u0002XV\u0003\u0002\u0002\u0002XY\u0003\u0002\u0002\u0002Y\\",
    "\u0003\u0002\u0002\u0002ZX\u0003\u0002\u0002\u0002[P\u0003\u0002\u0002",
    "\u0002\\_\u0003\u0002\u0002\u0002][\u0003\u0002\u0002\u0002]^\u0003",
    "\u0002\u0002\u0002^c\u0003\u0002\u0002\u0002_]\u0003\u0002\u0002\u0002",
    "`b\t\u0002\u0002\u0002a`\u0003\u0002\u0002\u0002be\u0003\u0002\u0002",
    "\u0002ca\u0003\u0002\u0002\u0002cd\u0003\u0002\u0002\u0002ds\u0003\u0002",
    "\u0002\u0002ec\u0003\u0002\u0002\u0002fh\u0005H%\u0002gi\u00079\u0002",
    "\u0002hg\u0003\u0002\u0002\u0002hi\u0003\u0002\u0002\u0002ij\u0003\u0002",
    "\u0002\u0002jn\u00078\u0002\u0002km\t\u0002\u0002\u0002lk\u0003\u0002",
    "\u0002\u0002mp\u0003\u0002\u0002\u0002nl\u0003\u0002\u0002\u0002no\u0003",
    "\u0002\u0002\u0002or\u0003\u0002\u0002\u0002pn\u0003\u0002\u0002\u0002",
    "qf\u0003\u0002\u0002\u0002ru\u0003\u0002\u0002\u0002sq\u0003\u0002\u0002",
    "\u0002st\u0003\u0002\u0002\u0002tw\u0003\u0002\u0002\u0002us\u0003\u0002",
    "\u0002\u0002vx\u00079\u0002\u0002wv\u0003\u0002\u0002\u0002wx\u0003",
    "\u0002\u0002\u0002xy\u0003\u0002\u0002\u0002y{\u0005\u0004\u0003\u0002",
    "z|\u00079\u0002\u0002{z\u0003\u0002\u0002\u0002{|\u0003\u0002\u0002",
    "\u0002|}\u0003\u0002\u0002\u0002}\u0081\u00078\u0002\u0002~\u0080\t",
    "\u0002\u0002\u0002\u007f~\u0003\u0002\u0002\u0002\u0080\u0083\u0003",
    "\u0002\u0002\u0002\u0081\u007f\u0003\u0002\u0002\u0002\u0081\u0082\u0003",
    "\u0002\u0002\u0002\u0082\u0091\u0003\u0002\u0002\u0002\u0083\u0081\u0003",
    "\u0002\u0002\u0002\u0084\u0086\u0005H%\u0002\u0085\u0087\u00079\u0002",
    "\u0002\u0086\u0085\u0003\u0002\u0002\u0002\u0086\u0087\u0003\u0002\u0002",
    "\u0002\u0087\u0088\u0003\u0002\u0002\u0002\u0088\u008c\t\u0003\u0002",
    "\u0002\u0089\u008b\t\u0002\u0002\u0002\u008a\u0089\u0003\u0002\u0002",
    "\u0002\u008b\u008e\u0003\u0002\u0002\u0002\u008c\u008a\u0003\u0002\u0002",
    "\u0002\u008c\u008d\u0003\u0002\u0002\u0002\u008d\u0090\u0003\u0002\u0002",
    "\u0002\u008e\u008c\u0003\u0002\u0002\u0002\u008f\u0084\u0003\u0002\u0002",
    "\u0002\u0090\u0093\u0003\u0002\u0002\u0002\u0091\u008f\u0003\u0002\u0002",
    "\u0002\u0091\u0092\u0003\u0002\u0002\u0002\u0092\u0097\u0003\u0002\u0002",
    "\u0002\u0093\u0091\u0003\u0002\u0002\u0002\u0094\u0096\t\u0002\u0002",
    "\u0002\u0095\u0094\u0003\u0002\u0002\u0002\u0096\u0099\u0003\u0002\u0002",
    "\u0002\u0097\u0095\u0003\u0002\u0002\u0002\u0097\u0098\u0003\u0002\u0002",
    "\u0002\u0098\u00a7\u0003\u0002\u0002\u0002\u0099\u0097\u0003\u0002\u0002",
    "\u0002\u009a\u009c\u0005<\u001f\u0002\u009b\u009d\u00079\u0002\u0002",
    "\u009c\u009b\u0003\u0002\u0002\u0002\u009c\u009d\u0003\u0002\u0002\u0002",
    "\u009d\u009e\u0003\u0002\u0002\u0002\u009e\u00a2\u00078\u0002\u0002",
    "\u009f\u00a1\t\u0002\u0002\u0002\u00a0\u009f\u0003\u0002\u0002\u0002",
    "\u00a1\u00a4\u0003\u0002\u0002\u0002\u00a2\u00a0\u0003\u0002\u0002\u0002",
    "\u00a2\u00a3\u0003\u0002\u0002\u0002\u00a3\u00a6\u0003\u0002\u0002\u0002",
    "\u00a4\u00a2\u0003\u0002\u0002\u0002\u00a5\u009a\u0003\u0002\u0002\u0002",
    "\u00a6\u00a9\u0003\u0002\u0002\u0002\u00a7\u00a5\u0003\u0002\u0002\u0002",
    "\u00a7\u00a8\u0003\u0002\u0002\u0002\u00a8\u00ad\u0003\u0002\u0002\u0002",
    "\u00a9\u00a7\u0003\u0002\u0002\u0002\u00aa\u00ac\t\u0002\u0002\u0002",
    "\u00ab\u00aa\u0003\u0002\u0002\u0002\u00ac\u00af\u0003\u0002\u0002\u0002",
    "\u00ad\u00ab\u0003\u0002\u0002\u0002\u00ad\u00ae\u0003\u0002\u0002\u0002",
    "\u00ae\u0003\u0003\u0002\u0002\u0002\u00af\u00ad\u0003\u0002\u0002\u0002",
    "\u00b0\u00b2\u0007\u0003\u0002\u0002\u00b1\u00b3\u00079\u0002\u0002",
    "\u00b2\u00b1\u0003\u0002\u0002\u0002\u00b2\u00b3\u0003\u0002\u0002\u0002",
    "\u00b3\u00b4\u0003\u0002\u0002\u0002\u00b4\u00b8\u00078\u0002\u0002",
    "\u00b5\u00b7\t\u0002\u0002\u0002\u00b6\u00b5\u0003\u0002\u0002\u0002",
    "\u00b7\u00ba\u0003\u0002\u0002\u0002\u00b8\u00b6\u0003\u0002\u0002\u0002",
    "\u00b8\u00b9\u0003\u0002\u0002\u0002\u00b9\u00c8\u0003\u0002\u0002\u0002",
    "\u00ba\u00b8\u0003\u0002\u0002\u0002\u00bb\u00bd\u0005\n\u0006\u0002",
    "\u00bc\u00be\u00079\u0002\u0002\u00bd\u00bc\u0003\u0002\u0002\u0002",
    "\u00bd\u00be\u0003\u0002\u0002\u0002\u00be\u00bf\u0003\u0002\u0002\u0002",
    "\u00bf\u00c3\u00078\u0002\u0002\u00c0\u00c2\t\u0002\u0002\u0002\u00c1",
    "\u00c0\u0003\u0002\u0002\u0002\u00c2\u00c5\u0003\u0002\u0002\u0002\u00c3",
    "\u00c1\u0003\u0002\u0002\u0002\u00c3\u00c4\u0003\u0002\u0002\u0002\u00c4",
    "\u00c7\u0003\u0002\u0002\u0002\u00c5\u00c3\u0003\u0002\u0002\u0002\u00c6",
    "\u00bb\u0003\u0002\u0002\u0002\u00c7\u00ca\u0003\u0002\u0002\u0002\u00c8",
    "\u00c6\u0003\u0002\u0002\u0002\u00c8\u00c9\u0003\u0002\u0002\u0002\u00c9",
    "\u00ce\u0003\u0002\u0002\u0002\u00ca\u00c8\u0003\u0002\u0002\u0002\u00cb",
    "\u00cd\t\u0002\u0002\u0002\u00cc\u00cb\u0003\u0002\u0002\u0002\u00cd",
    "\u00d0\u0003\u0002\u0002\u0002\u00ce\u00cc\u0003\u0002\u0002\u0002\u00ce",
    "\u00cf\u0003\u0002\u0002\u0002\u00cf\u00d1\u0003\u0002\u0002\u0002\u00d0",
    "\u00ce\u0003\u0002\u0002\u0002\u00d1\u00d2\u0007\u0004\u0002\u0002\u00d2",
    "\u0005\u0003\u0002\u0002\u0002\u00d3\u00d4\u00074\u0002\u0002\u00d4",
    "\u0007\u0003\u0002\u0002\u0002\u00d5\u00d6\u00074\u0002\u0002\u00d6",
    "\t\u0003\u0002\u0002\u0002\u00d7\u00d8\u00058\u001d\u0002\u00d8\u00d9",
    "\u00079\u0002\u0002\u00d9\u00da\u0007\u0005\u0002\u0002\u00da\u00db",
    "\u00079\u0002\u0002\u00db\u00dc\u0005\u0006\u0004\u0002\u00dc\u00ef",
    "\u0003\u0002\u0002\u0002\u00dd\u00de\u0007\u0006\u0002\u0002\u00de\u00e0",
    "\u00079\u0002\u0002\u00df\u00dd\u0003\u0002\u0002\u0002\u00df\u00e0",
    "\u0003\u0002\u0002\u0002\u00e0\u00e1\u0003\u0002\u0002\u0002\u00e1\u00e2",
    "\u00058\u001d\u0002\u00e2\u00e3\u00079\u0002\u0002\u00e3\u00ec\u0005",
    "\u0006\u0004\u0002\u00e4\u00e6\u00079\u0002\u0002\u00e5\u00e4\u0003",
    "\u0002\u0002\u0002\u00e5\u00e6\u0003\u0002\u0002\u0002\u00e6\u00e7\u0003",
    "\u0002\u0002\u0002\u00e7\u00e9\u0007\u0007\u0002\u0002\u00e8\u00ea\u0007",
    "9\u0002\u0002\u00e9\u00e8\u0003\u0002\u0002\u0002\u00e9\u00ea\u0003",
    "\u0002\u0002\u0002\u00ea\u00eb\u0003\u0002\u0002\u0002\u00eb\u00ed\u0005",
    "\u000e\b\u0002\u00ec\u00e5\u0003\u0002\u0002\u0002\u00ec\u00ed\u0003",
    "\u0002\u0002\u0002\u00ed\u00ef\u0003\u0002\u0002\u0002\u00ee\u00d7\u0003",
    "\u0002\u0002\u0002\u00ee\u00df\u0003\u0002\u0002\u0002\u00ef\u000b\u0003",
    "\u0002\u0002\u0002\u00f0\u00f2\u0007\b\u0002\u0002\u00f1\u00f3\u0007",
    "9\u0002\u0002\u00f2\u00f1\u0003\u0002\u0002\u0002\u00f2\u00f3\u0003",
    "\u0002\u0002\u0002\u00f3\u00f4\u0003\u0002\u0002\u0002\u00f4\u00f6\u0005",
    "\u000e\b\u0002\u00f5\u00f7\u00079\u0002\u0002\u00f6\u00f5\u0003\u0002",
    "\u0002\u0002\u00f6\u00f7\u0003\u0002\u0002\u0002\u00f7\u00f8\u0003\u0002",
    "\u0002\u0002\u00f8\u00f9\u0007\t\u0002\u0002\u00f9\r\u0003\u0002\u0002",
    "\u0002\u00fa\u00fb\b\b\u0001\u0002\u00fb\u00fd\u0007\b\u0002\u0002\u00fc",
    "\u00fe\u00079\u0002\u0002\u00fd\u00fc\u0003\u0002\u0002\u0002\u00fd",
    "\u00fe\u0003\u0002\u0002\u0002\u00fe\u00ff\u0003\u0002\u0002\u0002\u00ff",
    "\u0101\u0005\u000e\b\u0002\u0100\u0102\u00079\u0002\u0002\u0101\u0100",
    "\u0003\u0002\u0002\u0002\u0101\u0102\u0003\u0002\u0002\u0002\u0102\u0103",
    "\u0003\u0002\u0002\u0002\u0103\u0105\u0007\t\u0002\u0002\u0104\u0106",
    "\u00079\u0002\u0002\u0105\u0104\u0003\u0002\u0002\u0002\u0105\u0106",
    "\u0003\u0002\u0002\u0002\u0106\u0107\u0003\u0002\u0002\u0002\u0107\u0109",
    "\t\u0004\u0002\u0002\u0108\u010a\u00079\u0002\u0002\u0109\u0108\u0003",
    "\u0002\u0002\u0002\u0109\u010a\u0003\u0002\u0002\u0002\u010a\u010b\u0003",
    "\u0002\u0002\u0002\u010b\u010d\u0007\b\u0002\u0002\u010c\u010e\u0007",
    "9\u0002\u0002\u010d\u010c\u0003\u0002\u0002\u0002\u010d\u010e\u0003",
    "\u0002\u0002\u0002\u010e\u010f\u0003\u0002\u0002\u0002\u010f\u0111\u0005",
    "\u000e\b\u0002\u0110\u0112\u00079\u0002\u0002\u0111\u0110\u0003\u0002",
    "\u0002\u0002\u0111\u0112\u0003\u0002\u0002\u0002\u0112\u0113\u0003\u0002",
    "\u0002\u0002\u0113\u0114\u0007\t\u0002\u0002\u0114\u0149\u0003\u0002",
    "\u0002\u0002\u0115\u0117\u0007\b\u0002\u0002\u0116\u0118\u00079\u0002",
    "\u0002\u0117\u0116\u0003\u0002\u0002\u0002\u0117\u0118\u0003\u0002\u0002",
    "\u0002\u0118\u0119\u0003\u0002\u0002\u0002\u0119\u011b\u0005\u000e\b",
    "\u0002\u011a\u011c\u00079\u0002\u0002\u011b\u011a\u0003\u0002\u0002",
    "\u0002\u011b\u011c\u0003\u0002\u0002\u0002\u011c\u011d\u0003\u0002\u0002",
    "\u0002\u011d\u011f\u0007\t\u0002\u0002\u011e\u0120\u00079\u0002\u0002",
    "\u011f\u011e\u0003\u0002\u0002\u0002\u011f\u0120\u0003\u0002\u0002\u0002",
    "\u0120\u0121\u0003\u0002\u0002\u0002\u0121\u0122\t\u0004\u0002\u0002",
    "\u0122\u0123\u00079\u0002\u0002\u0123\u0124\u0005\u000e\b\r\u0124\u0149",
    "\u0003\u0002\u0002\u0002\u0125\u0132\u0007\f\u0002\u0002\u0126\u0127",
    "\u00079\u0002\u0002\u0127\u0133\u0005\u000e\b\u0002\u0128\u012a\u0007",
    "\b\u0002\u0002\u0129\u012b\u00079\u0002\u0002\u012a\u0129\u0003\u0002",
    "\u0002\u0002\u012a\u012b\u0003\u0002\u0002\u0002\u012b\u012c\u0003\u0002",
    "\u0002\u0002\u012c\u012e\u0005\u000e\b\u0002\u012d\u012f\u00079\u0002",
    "\u0002\u012e\u012d\u0003\u0002\u0002\u0002\u012e\u012f\u0003\u0002\u0002",
    "\u0002\u012f\u0130\u0003\u0002\u0002\u0002\u0130\u0131\u0007\t\u0002",
    "\u0002\u0131\u0133\u0003\u0002\u0002\u0002\u0132\u0126\u0003\u0002\u0002",
    "\u0002\u0132\u0128\u0003\u0002\u0002\u0002\u0133\u0149\u0003\u0002\u0002",
    "\u0002\u0134\u0149\u0005\u0018\r\u0002\u0135\u0137\t\u0005\u0002\u0002",
    "\u0136\u0138\u00079\u0002\u0002\u0137\u0136\u0003\u0002\u0002\u0002",
    "\u0137\u0138\u0003\u0002\u0002\u0002\u0138\u0139\u0003\u0002\u0002\u0002",
    "\u0139\u0149\u0005\u000e\b\t\u013a\u0149\u0005\u0010\t\u0002\u013b\u0149",
    "\u0005\u0006\u0004\u0002\u013c\u0149\u0005\u0014\u000b\u0002\u013d\u0149",
    "\u0005\u0016\f\u0002\u013e\u0140\u0007\b\u0002\u0002\u013f\u0141\u0007",
    "9\u0002\u0002\u0140\u013f\u0003\u0002\u0002\u0002\u0140\u0141\u0003",
    "\u0002\u0002\u0002\u0141\u0142\u0003\u0002\u0002\u0002\u0142\u0144\u0005",
    "\u000e\b\u0002\u0143\u0145\u00079\u0002\u0002\u0144\u0143\u0003\u0002",
    "\u0002\u0002\u0144\u0145\u0003\u0002\u0002\u0002\u0145\u0146\u0003\u0002",
    "\u0002\u0002\u0146\u0147\u0007\t\u0002\u0002\u0147\u0149\u0003\u0002",
    "\u0002\u0002\u0148\u00fa\u0003\u0002\u0002\u0002\u0148\u0115\u0003\u0002",
    "\u0002\u0002\u0148\u0125\u0003\u0002\u0002\u0002\u0148\u0134\u0003\u0002",
    "\u0002\u0002\u0148\u0135\u0003\u0002\u0002\u0002\u0148\u013a\u0003\u0002",
    "\u0002\u0002\u0148\u013b\u0003\u0002\u0002\u0002\u0148\u013c\u0003\u0002",
    "\u0002\u0002\u0148\u013d\u0003\u0002\u0002\u0002\u0148\u013e\u0003\u0002",
    "\u0002\u0002\u0149\u0173\u0003\u0002\u0002\u0002\u014a\u014b\f\u0010",
    "\u0002\u0002\u014b\u014c\u00079\u0002\u0002\u014c\u014d\t\u0004\u0002",
    "\u0002\u014d\u014e\u00079\u0002\u0002\u014e\u0172\u0005\u000e\b\u0011",
    "\u014f\u0151\f\n\u0002\u0002\u0150\u0152\u00079\u0002\u0002\u0151\u0150",
    "\u0003\u0002\u0002\u0002\u0151\u0152\u0003\u0002\u0002\u0002\u0152\u0153",
    "\u0003\u0002\u0002\u0002\u0153\u0155\t\u0006\u0002\u0002\u0154\u0156",
    "\u00079\u0002\u0002\u0155\u0154\u0003\u0002\u0002\u0002\u0155\u0156",
    "\u0003\u0002\u0002\u0002\u0156\u0157\u0003\u0002\u0002\u0002\u0157\u0172",
    "\u0005\u000e\b\u000b\u0158\u015a\f\b\u0002\u0002\u0159\u015b\u00079",
    "\u0002\u0002\u015a\u0159\u0003\u0002\u0002\u0002\u015a\u015b\u0003\u0002",
    "\u0002\u0002\u015b\u015c\u0003\u0002\u0002\u0002\u015c\u015e\t\u0007",
    "\u0002\u0002\u015d\u015f\u00079\u0002\u0002\u015e\u015d\u0003\u0002",
    "\u0002\u0002\u015e\u015f\u0003\u0002\u0002\u0002\u015f\u0160\u0003\u0002",
    "\u0002\u0002\u0160\u0172\u0005\u000e\b\t\u0161\u0162\f\u000e\u0002\u0002",
    "\u0162\u0163\u00079\u0002\u0002\u0163\u0165\t\u0004\u0002\u0002\u0164",
    "\u0166\u00079\u0002\u0002\u0165\u0164\u0003\u0002\u0002\u0002\u0165",
    "\u0166\u0003\u0002\u0002\u0002\u0166\u0167\u0003\u0002\u0002\u0002\u0167",
    "\u0169\u0007\b\u0002\u0002\u0168\u016a\u00079\u0002\u0002\u0169\u0168",
    "\u0003\u0002\u0002\u0002\u0169\u016a\u0003\u0002\u0002\u0002\u016a\u016b",
    "\u0003\u0002\u0002\u0002\u016b\u016d\u0005\u000e\b\u0002\u016c\u016e",
    "\u00079\u0002\u0002\u016d\u016c\u0003\u0002\u0002\u0002\u016d\u016e",
    "\u0003\u0002\u0002\u0002\u016e\u016f\u0003\u0002\u0002\u0002\u016f\u0170",
    "\u0007\t\u0002\u0002\u0170\u0172\u0003\u0002\u0002\u0002\u0171\u014a",
    "\u0003\u0002\u0002\u0002\u0171\u014f\u0003\u0002\u0002\u0002\u0171\u0158",
    "\u0003\u0002\u0002\u0002\u0171\u0161\u0003\u0002\u0002\u0002\u0172\u0175",
    "\u0003\u0002\u0002\u0002\u0173\u0171\u0003\u0002\u0002\u0002\u0173\u0174",
    "\u0003\u0002\u0002\u0002\u0174\u000f\u0003\u0002\u0002\u0002\u0175\u0173",
    "\u0003\u0002\u0002\u0002\u0176\u0178\u0005\b\u0005\u0002\u0177\u0179",
    "\u00079\u0002\u0002\u0178\u0177\u0003\u0002\u0002\u0002\u0178\u0179",
    "\u0003\u0002\u0002\u0002\u0179\u017a\u0003\u0002\u0002\u0002\u017a\u017c",
    "\u0007\b\u0002\u0002\u017b\u017d\u00079\u0002\u0002\u017c\u017b\u0003",
    "\u0002\u0002\u0002\u017c\u017d\u0003\u0002\u0002\u0002\u017d\u017e\u0003",
    "\u0002\u0002\u0002\u017e\u0180\u0005\u0012\n\u0002\u017f\u0181\u0007",
    "9\u0002\u0002\u0180\u017f\u0003\u0002\u0002\u0002\u0180\u0181\u0003",
    "\u0002\u0002\u0002\u0181\u0182\u0003\u0002\u0002\u0002\u0182\u0183\u0007",
    "\t\u0002\u0002\u0183\u0011\u0003\u0002\u0002\u0002\u0184\u018f\u0005",
    "\u000e\b\u0002\u0185\u0187\u00079\u0002\u0002\u0186\u0185\u0003\u0002",
    "\u0002\u0002\u0186\u0187\u0003\u0002\u0002\u0002\u0187\u0188\u0003\u0002",
    "\u0002\u0002\u0188\u018a\u00077\u0002\u0002\u0189\u018b\u00079\u0002",
    "\u0002\u018a\u0189\u0003\u0002\u0002\u0002\u018a\u018b\u0003\u0002\u0002",
    "\u0002\u018b\u018c\u0003\u0002\u0002\u0002\u018c\u018e\u0005\u000e\b",
    "\u0002\u018d\u0186\u0003\u0002\u0002\u0002\u018e\u0191\u0003\u0002\u0002",
    "\u0002\u018f\u018d\u0003\u0002\u0002\u0002\u018f\u0190\u0003\u0002\u0002",
    "\u0002\u0190\u0193\u0003\u0002\u0002\u0002\u0191\u018f\u0003\u0002\u0002",
    "\u0002\u0192\u0184\u0003\u0002\u0002\u0002\u0192\u0193\u0003\u0002\u0002",
    "\u0002\u0193\u0013\u0003\u0002\u0002\u0002\u0194\u0195\u0005\u0006\u0004",
    "\u0002\u0195\u0196\u0007\u0016\u0002\u0002\u0196\u0197\u0005\u000e\b",
    "\u0002\u0197\u0198\u0007\u0017\u0002\u0002\u0198\u0015\u0003\u0002\u0002",
    "\u0002\u0199\u019a\u0007\u0018\u0002\u0002\u019a\u019b\u00079\u0002",
    "\u0002\u019b\u019c\u0005\b\u0005\u0002\u019c\u0017\u0003\u0002\u0002",
    "\u0002\u019d\u01a3\u0007,\u0002\u0002\u019e\u01a3\u0007-\u0002\u0002",
    "\u019f\u01a3\u00072\u0002\u0002\u01a0\u01a3\u00073\u0002\u0002\u01a1",
    "\u01a3\u0005\u0016\f\u0002\u01a2\u019d\u0003\u0002\u0002\u0002\u01a2",
    "\u019e\u0003\u0002\u0002\u0002\u01a2\u019f\u0003\u0002\u0002\u0002\u01a2",
    "\u01a0\u0003\u0002\u0002\u0002\u01a2\u01a1\u0003\u0002\u0002\u0002\u01a3",
    "\u0019\u0003\u0002\u0002\u0002\u01a4\u01ba\u0007\u0019\u0002\u0002\u01a5",
    "\u01a6\u00079\u0002\u0002\u01a6\u01a7\u00058\u001d\u0002\u01a7\u01a8",
    "\u00079\u0002\u0002\u01a8\u01a9\u0007\u0005\u0002\u0002\u01a9\u01aa",
    "\u00079\u0002\u0002\u01aa\u01ab\u0005\u0006\u0004\u0002\u01ab\u01bb",
    "\u0003\u0002\u0002\u0002\u01ac\u01ad\u00079\u0002\u0002\u01ad\u01ae",
    "\u00058\u001d\u0002\u01ae\u01af\u00079\u0002\u0002\u01af\u01b8\u0005",
    "\u0006\u0004\u0002\u01b0\u01b2\u00079\u0002\u0002\u01b1\u01b0\u0003",
    "\u0002\u0002\u0002\u01b1\u01b2\u0003\u0002\u0002\u0002\u01b2\u01b3\u0003",
    "\u0002\u0002\u0002\u01b3\u01b5\u0007\u0007\u0002\u0002\u01b4\u01b6\u0007",
    "9\u0002\u0002\u01b5\u01b4\u0003\u0002\u0002\u0002\u01b5\u01b6\u0003",
    "\u0002\u0002\u0002\u01b6\u01b7\u0003\u0002\u0002\u0002\u01b7\u01b9\u0005",
    "\u000e\b\u0002\u01b8\u01b1\u0003\u0002\u0002\u0002\u01b8\u01b9\u0003",
    "\u0002\u0002\u0002\u01b9\u01bb\u0003\u0002\u0002\u0002\u01ba\u01a5\u0003",
    "\u0002\u0002\u0002\u01ba\u01ac\u0003\u0002\u0002\u0002\u01bb\u001b\u0003",
    "\u0002\u0002\u0002\u01bc\u01ca\u0005\u001a\u000e\u0002\u01bd\u01bf\u0007",
    "9\u0002\u0002\u01be\u01bd\u0003\u0002\u0002\u0002\u01be\u01bf\u0003",
    "\u0002\u0002\u0002\u01bf\u01c0\u0003\u0002\u0002\u0002\u01c0\u01c4\u0007",
    "8\u0002\u0002\u01c1\u01c3\t\u0002\u0002\u0002\u01c2\u01c1\u0003\u0002",
    "\u0002\u0002\u01c3\u01c6\u0003\u0002\u0002\u0002\u01c4\u01c2\u0003\u0002",
    "\u0002\u0002\u01c4\u01c5\u0003\u0002\u0002\u0002\u01c5\u01c7\u0003\u0002",
    "\u0002\u0002\u01c6\u01c4\u0003\u0002\u0002\u0002\u01c7\u01c9\u0005\u001a",
    "\u000e\u0002\u01c8\u01be\u0003\u0002\u0002\u0002\u01c9\u01cc\u0003\u0002",
    "\u0002\u0002\u01ca\u01c8\u0003\u0002\u0002\u0002\u01ca\u01cb\u0003\u0002",
    "\u0002\u0002\u01cb\u001d\u0003\u0002\u0002\u0002\u01cc\u01ca\u0003\u0002",
    "\u0002\u0002\u01cd\u01d0\u0005$\u0013\u0002\u01ce\u01d0\u0005,\u0017",
    "\u0002\u01cf\u01cd\u0003\u0002\u0002\u0002\u01cf\u01ce\u0003\u0002\u0002",
    "\u0002\u01d0\u001f\u0003\u0002\u0002\u0002\u01d1\u01d8\u0005$\u0013",
    "\u0002\u01d2\u01d8\u0005&\u0014\u0002\u01d3\u01d8\u0005,\u0017\u0002",
    "\u01d4\u01d8\u0005.\u0018\u0002\u01d5\u01d8\u00050\u0019\u0002\u01d6",
    "\u01d8\u00056\u001c\u0002\u01d7\u01d1\u0003\u0002\u0002\u0002\u01d7",
    "\u01d2\u0003\u0002\u0002\u0002\u01d7\u01d3\u0003\u0002\u0002\u0002\u01d7",
    "\u01d4\u0003\u0002\u0002\u0002\u01d7\u01d5\u0003\u0002\u0002\u0002\u01d7",
    "\u01d6\u0003\u0002\u0002\u0002\u01d8!\u0003\u0002\u0002\u0002\u01d9",
    "\u01e7\u0005 \u0011\u0002\u01da\u01dc\u00079\u0002\u0002\u01db\u01da",
    "\u0003\u0002\u0002\u0002\u01db\u01dc\u0003\u0002\u0002\u0002\u01dc\u01dd",
    "\u0003\u0002\u0002\u0002\u01dd\u01e1\u00078\u0002\u0002\u01de\u01e0",
    "\t\u0002\u0002\u0002\u01df\u01de\u0003\u0002\u0002\u0002\u01e0\u01e3",
    "\u0003\u0002\u0002\u0002\u01e1\u01df\u0003\u0002\u0002\u0002\u01e1\u01e2",
    "\u0003\u0002\u0002\u0002\u01e2\u01e4\u0003\u0002\u0002\u0002\u01e3\u01e1",
    "\u0003\u0002\u0002\u0002\u01e4\u01e6\u0005 \u0011\u0002\u01e5\u01db",
    "\u0003\u0002\u0002\u0002\u01e6\u01e9\u0003\u0002\u0002\u0002\u01e7\u01e5",
    "\u0003\u0002\u0002\u0002\u01e7\u01e8\u0003\u0002\u0002\u0002\u01e8#",
    "\u0003\u0002\u0002\u0002\u01e9\u01e7\u0003\u0002\u0002\u0002\u01ea\u01eb",
    "\u0007\u001a\u0002\u0002\u01eb\u01ec\u00079\u0002\u0002\u01ec\u01ed",
    "\u0005\u0010\t\u0002\u01ed%\u0003\u0002\u0002\u0002\u01ee\u01ef\u0007",
    "\u001b\u0002\u0002\u01ef\u01f0\u00079\u0002\u0002\u01f0\u01f8\u0005",
    "\u0006\u0004\u0002\u01f1\u01f3\u00079\u0002\u0002\u01f2\u01f1\u0003",
    "\u0002\u0002\u0002\u01f2\u01f3\u0003\u0002\u0002\u0002\u01f3\u01f4\u0003",
    "\u0002\u0002\u0002\u01f4\u01f5\u0007\u0016\u0002\u0002\u01f5\u01f6\u0005",
    "\u000e\b\u0002\u01f6\u01f7\u0007\u0017\u0002\u0002\u01f7\u01f9\u0003",
    "\u0002\u0002\u0002\u01f8\u01f2\u0003\u0002\u0002\u0002\u01f8\u01f9\u0003",
    "\u0002\u0002\u0002\u01f9\u01fb\u0003\u0002\u0002\u0002\u01fa\u01fc\u0007",
    "9\u0002\u0002\u01fb\u01fa\u0003\u0002\u0002\u0002\u01fb\u01fc\u0003",
    "\u0002\u0002\u0002\u01fc\u01fd\u0003\u0002\u0002\u0002\u01fd\u01ff\u0007",
    "\u0007\u0002\u0002\u01fe\u0200\u00079\u0002\u0002\u01ff\u01fe\u0003",
    "\u0002\u0002\u0002\u01ff\u0200\u0003\u0002\u0002\u0002\u0200\u0201\u0003",
    "\u0002\u0002\u0002\u0201\u0202\u0005\u000e\b\u0002\u0202\'\u0003\u0002",
    "\u0002\u0002\u0203\u0206\u0005\f\u0007\u0002\u0204\u0206\u0005\u000e",
    "\b\u0002\u0205\u0203\u0003\u0002\u0002\u0002\u0205\u0204\u0003\u0002",
    "\u0002\u0002\u0206)\u0003\u0002\u0002\u0002\u0207\u0209\u0007\u001c",
    "\u0002\u0002\u0208\u020a\u00079\u0002\u0002\u0209\u0208\u0003\u0002",
    "\u0002\u0002\u0209\u020a\u0003\u0002\u0002\u0002\u020a\u020b\u0003\u0002",
    "\u0002\u0002\u020b\u020d\u0005(\u0015\u0002\u020c\u020e\u00079\u0002",
    "\u0002\u020d\u020c\u0003\u0002\u0002\u0002\u020d\u020e\u0003\u0002\u0002",
    "\u0002\u020e\u020f\u0003\u0002\u0002\u0002\u020f\u0211\u0007\u001d\u0002",
    "\u0002\u0210\u0212\u00079\u0002\u0002\u0211\u0210\u0003\u0002\u0002",
    "\u0002\u0211\u0212\u0003\u0002\u0002\u0002\u0212\u0213\u0003\u0002\u0002",
    "\u0002\u0213\u0217\u00078\u0002\u0002\u0214\u0216\t\u0002\u0002\u0002",
    "\u0215\u0214\u0003\u0002\u0002\u0002\u0216\u0219\u0003\u0002\u0002\u0002",
    "\u0217\u0215\u0003\u0002\u0002\u0002\u0217\u0218\u0003\u0002\u0002\u0002",
    "\u0218\u021a\u0003\u0002\u0002\u0002\u0219\u0217\u0003\u0002\u0002\u0002",
    "\u021a\u021b\u0007\u001e\u0002\u0002\u021b+\u0003\u0002\u0002\u0002",
    "\u021c\u021e\u0007\u001c\u0002\u0002\u021d\u021f\u00079\u0002\u0002",
    "\u021e\u021d\u0003\u0002\u0002\u0002\u021e\u021f\u0003\u0002\u0002\u0002",
    "\u021f\u0220\u0003\u0002\u0002\u0002\u0220\u0222\u0005(\u0015\u0002",
    "\u0221\u0223\u00079\u0002\u0002\u0222\u0221\u0003\u0002\u0002\u0002",
    "\u0222\u0223\u0003\u0002\u0002\u0002\u0223\u0224\u0003\u0002\u0002\u0002",
    "\u0224\u0226\u0007\u001d\u0002\u0002\u0225\u0227\u00079\u0002\u0002",
    "\u0226\u0225\u0003\u0002\u0002\u0002\u0226\u0227\u0003\u0002\u0002\u0002",
    "\u0227\u0228\u0003\u0002\u0002\u0002\u0228\u022c\u00078\u0002\u0002",
    "\u0229\u022b\t\u0002\u0002\u0002\u022a\u0229\u0003\u0002\u0002\u0002",
    "\u022b\u022e\u0003\u0002\u0002\u0002\u022c\u022a\u0003\u0002\u0002\u0002",
    "\u022c\u022d\u0003\u0002\u0002\u0002\u022d\u0230\u0003\u0002\u0002\u0002",
    "\u022e\u022c\u0003\u0002\u0002\u0002\u022f\u0231\u0005\"\u0012\u0002",
    "\u0230\u022f\u0003\u0002\u0002\u0002\u0230\u0231\u0003\u0002\u0002\u0002",
    "\u0231\u0235\u0003\u0002\u0002\u0002\u0232\u0234\t\u0002\u0002\u0002",
    "\u0233\u0232\u0003\u0002\u0002\u0002\u0234\u0237\u0003\u0002\u0002\u0002",
    "\u0235\u0233\u0003\u0002\u0002\u0002\u0235\u0236\u0003\u0002\u0002\u0002",
    "\u0236\u0257\u0003\u0002\u0002\u0002\u0237\u0235\u0003\u0002\u0002\u0002",
    "\u0238\u023c\u0007\u001f\u0002\u0002\u0239\u023d\u0005\f\u0007\u0002",
    "\u023a\u023b\u00079\u0002\u0002\u023b\u023d\u0005\u000e\b\u0002\u023c",
    "\u0239\u0003\u0002\u0002\u0002\u023c\u023a\u0003\u0002\u0002\u0002\u023d",
    "\u023f\u0003\u0002\u0002\u0002\u023e\u0240\u00079\u0002\u0002\u023f",
    "\u023e\u0003\u0002\u0002\u0002\u023f\u0240\u0003\u0002\u0002\u0002\u0240",
    "\u0241\u0003\u0002\u0002\u0002\u0241\u0243\u0007\u001d\u0002\u0002\u0242",
    "\u0244\u00079\u0002\u0002\u0243\u0242\u0003\u0002\u0002\u0002\u0243",
    "\u0244\u0003\u0002\u0002\u0002\u0244\u0245\u0003\u0002\u0002\u0002\u0245",
    "\u0249\u00078\u0002\u0002\u0246\u0248\t\u0002\u0002\u0002\u0247\u0246",
    "\u0003\u0002\u0002\u0002\u0248\u024b\u0003\u0002\u0002\u0002\u0249\u0247",
    "\u0003\u0002\u0002\u0002\u0249\u024a\u0003\u0002\u0002\u0002\u024a\u024d",
    "\u0003\u0002\u0002\u0002\u024b\u0249\u0003\u0002\u0002\u0002\u024c\u024e",
    "\u0005\"\u0012\u0002\u024d\u024c\u0003\u0002\u0002\u0002\u024d\u024e",
    "\u0003\u0002\u0002\u0002\u024e\u0252\u0003\u0002\u0002\u0002\u024f\u0251",
    "\t\u0002\u0002\u0002\u0250\u024f\u0003\u0002\u0002\u0002\u0251\u0254",
    "\u0003\u0002\u0002\u0002\u0252\u0250\u0003\u0002\u0002\u0002\u0252\u0253",
    "\u0003\u0002\u0002\u0002\u0253\u0256\u0003\u0002\u0002\u0002\u0254\u0252",
    "\u0003\u0002\u0002\u0002\u0255\u0238\u0003\u0002\u0002\u0002\u0256\u0259",
    "\u0003\u0002\u0002\u0002\u0257\u0255\u0003\u0002\u0002\u0002\u0257\u0258",
    "\u0003\u0002\u0002\u0002\u0258\u026e\u0003\u0002\u0002\u0002\u0259\u0257",
    "\u0003\u0002\u0002\u0002\u025a\u025c\u0007 \u0002\u0002\u025b\u025d",
    "\u00079\u0002\u0002\u025c\u025b\u0003\u0002\u0002\u0002\u025c\u025d",
    "\u0003\u0002\u0002\u0002\u025d\u025e\u0003\u0002\u0002\u0002\u025e\u0262",
    "\u00078\u0002\u0002\u025f\u0261\t\u0002\u0002\u0002\u0260\u025f\u0003",
    "\u0002\u0002\u0002\u0261\u0264\u0003\u0002\u0002\u0002\u0262\u0260\u0003",
    "\u0002\u0002\u0002\u0262\u0263\u0003\u0002\u0002\u0002\u0263\u0266\u0003",
    "\u0002\u0002\u0002\u0264\u0262\u0003\u0002\u0002\u0002\u0265\u0267\u0005",
    "\"\u0012\u0002\u0266\u0265\u0003\u0002\u0002\u0002\u0266\u0267\u0003",
    "\u0002\u0002\u0002\u0267\u026b\u0003\u0002\u0002\u0002\u0268\u026a\t",
    "\u0002\u0002\u0002\u0269\u0268\u0003\u0002\u0002\u0002\u026a\u026d\u0003",
    "\u0002\u0002\u0002\u026b\u0269\u0003\u0002\u0002\u0002\u026b\u026c\u0003",
    "\u0002\u0002\u0002\u026c\u026f\u0003\u0002\u0002\u0002\u026d\u026b\u0003",
    "\u0002\u0002\u0002\u026e\u025a\u0003\u0002\u0002\u0002\u026e\u026f\u0003",
    "\u0002\u0002\u0002\u026f\u0273\u0003\u0002\u0002\u0002\u0270\u0272\t",
    "\u0002\u0002\u0002\u0271\u0270\u0003\u0002\u0002\u0002\u0272\u0275\u0003",
    "\u0002\u0002\u0002\u0273\u0271\u0003\u0002\u0002\u0002\u0273\u0274\u0003",
    "\u0002\u0002\u0002\u0274\u0276\u0003\u0002\u0002\u0002\u0275\u0273\u0003",
    "\u0002\u0002\u0002\u0276\u0277\u0007\u001e\u0002\u0002\u0277-\u0003",
    "\u0002\u0002\u0002\u0278\u027a\u0007!\u0002\u0002\u0279\u027b\u0007",
    "9\u0002\u0002\u027a\u0279\u0003\u0002\u0002\u0002\u027a\u027b\u0003",
    "\u0002\u0002\u0002\u027b\u027c\u0003\u0002\u0002\u0002\u027c\u0280\u0007",
    "8\u0002\u0002\u027d\u027f\t\u0002\u0002\u0002\u027e\u027d\u0003\u0002",
    "\u0002\u0002\u027f\u0282\u0003\u0002\u0002\u0002\u0280\u027e\u0003\u0002",
    "\u0002\u0002\u0280\u0281\u0003\u0002\u0002\u0002\u0281\u0289\u0003\u0002",
    "\u0002\u0002\u0282\u0280\u0003\u0002\u0002\u0002\u0283\u0285\u00052",
    "\u001a\u0002\u0284\u0286\u00079\u0002\u0002\u0285\u0284\u0003\u0002",
    "\u0002\u0002\u0285\u0286\u0003\u0002\u0002\u0002\u0286\u0287\u0003\u0002",
    "\u0002\u0002\u0287\u0288\u00078\u0002\u0002\u0288\u028a\u0003\u0002",
    "\u0002\u0002\u0289\u0283\u0003\u0002\u0002\u0002\u0289\u028a\u0003\u0002",
    "\u0002\u0002\u028a\u028e\u0003\u0002\u0002\u0002\u028b\u028d\t\u0002",
    "\u0002\u0002\u028c\u028b\u0003\u0002\u0002\u0002\u028d\u0290\u0003\u0002",
    "\u0002\u0002\u028e\u028c\u0003\u0002\u0002\u0002\u028e\u028f\u0003\u0002",
    "\u0002\u0002\u028f\u0291\u0003\u0002\u0002\u0002\u0290\u028e\u0003\u0002",
    "\u0002\u0002\u0291\u0292\u0007\"\u0002\u0002\u0292/\u0003\u0002\u0002",
    "\u0002\u0293\u02a0\u0007#\u0002\u0002\u0294\u0295\u00079\u0002\u0002",
    "\u0295\u02a1\u0005\u000e\b\u0002\u0296\u0298\u0007\b\u0002\u0002\u0297",
    "\u0299\u00079\u0002\u0002\u0298\u0297\u0003\u0002\u0002\u0002\u0298",
    "\u0299\u0003\u0002\u0002\u0002\u0299\u029a\u0003\u0002\u0002\u0002\u029a",
    "\u029c\u0005\u000e\b\u0002\u029b\u029d\u00079\u0002\u0002\u029c\u029b",
    "\u0003\u0002\u0002\u0002\u029c\u029d\u0003\u0002\u0002\u0002\u029d\u029e",
    "\u0003\u0002\u0002\u0002\u029e\u029f\u0007\t\u0002\u0002\u029f\u02a1",
    "\u0003\u0002\u0002\u0002\u02a0\u0294\u0003\u0002\u0002\u0002\u02a0\u0296",
    "\u0003\u0002\u0002\u0002\u02a11\u0003\u0002\u0002\u0002\u02a2\u02ad",
    "\u00054\u001b\u0002\u02a3\u02a7\u00078\u0002\u0002\u02a4\u02a6\t\u0002",
    "\u0002\u0002\u02a5\u02a4\u0003\u0002\u0002\u0002\u02a6\u02a9\u0003\u0002",
    "\u0002\u0002\u02a7\u02a5\u0003\u0002\u0002\u0002\u02a7\u02a8\u0003\u0002",
    "\u0002\u0002\u02a8\u02aa\u0003\u0002\u0002\u0002\u02a9\u02a7\u0003\u0002",
    "\u0002\u0002\u02aa\u02ac\u00054\u001b\u0002\u02ab\u02a3\u0003\u0002",
    "\u0002\u0002\u02ac\u02af\u0003\u0002\u0002\u0002\u02ad\u02ab\u0003\u0002",
    "\u0002\u0002\u02ad\u02ae\u0003\u0002\u0002\u0002\u02ae3\u0003\u0002",
    "\u0002\u0002\u02af\u02ad\u0003\u0002\u0002\u0002\u02b0\u02b1\u0005\"",
    "\u0012\u0002\u02b15\u0003\u0002\u0002\u0002\u02b2\u02b8\u0007$\u0002",
    "\u0002\u02b3\u02b9\u0005\f\u0007\u0002\u02b4\u02b5\u00079\u0002\u0002",
    "\u02b5\u02b7\u0005\u000e\b\u0002\u02b6\u02b4\u0003\u0002\u0002\u0002",
    "\u02b6\u02b7\u0003\u0002\u0002\u0002\u02b7\u02b9\u0003\u0002\u0002\u0002",
    "\u02b8\u02b3\u0003\u0002\u0002\u0002\u02b8\u02b6\u0003\u0002\u0002\u0002",
    "\u02b97\u0003\u0002\u0002\u0002\u02ba\u02bb\u00074\u0002\u0002\u02bb",
    "9\u0003\u0002\u0002\u0002\u02bc\u02be\u0007\u0006\u0002\u0002\u02bd",
    "\u02bc\u0003\u0002\u0002\u0002\u02bd\u02be\u0003\u0002\u0002\u0002\u02be",
    "\u02bf\u0003\u0002\u0002\u0002\u02bf\u02c0\u0007\u0018\u0002\u0002\u02c0",
    "\u02c1\u00079\u0002\u0002\u02c1\u02c2\u00074\u0002\u0002\u02c2\u02c3",
    "\u00079\u0002\u0002\u02c3\u02c4\u0007%\u0002\u0002\u02c4\u02c5\u0007",
    "9\u0002\u0002\u02c5\u02c6\u0005@!\u0002\u02c6\u02c7\u00079\u0002\u0002",
    "\u02c7\u02c8\u0007&\u0002\u0002\u02c8\u02c9\u00079\u0002\u0002\u02c9",
    "\u02ca\u0005> \u0002\u02ca;\u0003\u0002\u0002\u0002\u02cb\u02cd\u0005",
    ":\u001e\u0002\u02cc\u02ce\u00079\u0002\u0002\u02cd\u02cc\u0003\u0002",
    "\u0002\u0002\u02cd\u02ce\u0003\u0002\u0002\u0002\u02ce\u02cf\u0003\u0002",
    "\u0002\u0002\u02cf\u02d3\u00078\u0002\u0002\u02d0\u02d2\t\u0002\u0002",
    "\u0002\u02d1\u02d0\u0003\u0002\u0002\u0002\u02d2\u02d5\u0003\u0002\u0002",
    "\u0002\u02d3\u02d1\u0003\u0002\u0002\u0002\u02d3\u02d4\u0003\u0002\u0002",
    "\u0002\u02d4\u02dc\u0003\u0002\u0002\u0002\u02d5\u02d3\u0003\u0002\u0002",
    "\u0002\u02d6\u02d8\u0005D#\u0002\u02d7\u02d9\u00079\u0002\u0002\u02d8",
    "\u02d7\u0003\u0002\u0002\u0002\u02d8\u02d9\u0003\u0002\u0002\u0002\u02d9",
    "\u02da\u0003\u0002\u0002\u0002\u02da\u02db\u00078\u0002\u0002\u02db",
    "\u02dd\u0003\u0002\u0002\u0002\u02dc\u02d6\u0003\u0002\u0002\u0002\u02dc",
    "\u02dd\u0003\u0002\u0002\u0002\u02dd\u02e1\u0003\u0002\u0002\u0002\u02de",
    "\u02e0\t\u0002\u0002\u0002\u02df\u02de\u0003\u0002\u0002\u0002\u02e0",
    "\u02e3\u0003\u0002\u0002\u0002\u02e1\u02df\u0003\u0002\u0002\u0002\u02e1",
    "\u02e2\u0003\u0002\u0002\u0002\u02e2\u02e4\u0003\u0002\u0002\u0002\u02e3",
    "\u02e1\u0003\u0002\u0002\u0002\u02e4\u02e5\u0007\'\u0002\u0002\u02e5",
    "=\u0003\u0002\u0002\u0002\u02e6\u02e9\u0007(\u0002\u0002\u02e7\u02e9",
    "\u00058\u001d\u0002\u02e8\u02e6\u0003\u0002\u0002\u0002\u02e8\u02e7",
    "\u0003\u0002\u0002\u0002\u02e9?\u0003\u0002\u0002\u0002\u02ea\u02fa",
    "\u0007(\u0002\u0002\u02eb\u02f6\u0005B\"\u0002\u02ec\u02ee\u00079\u0002",
    "\u0002\u02ed\u02ec\u0003\u0002\u0002\u0002\u02ed\u02ee\u0003\u0002\u0002",
    "\u0002\u02ee\u02ef\u0003\u0002\u0002\u0002\u02ef\u02f1\u00077\u0002",
    "\u0002\u02f0\u02f2\u00079\u0002\u0002\u02f1\u02f0\u0003\u0002\u0002",
    "\u0002\u02f1\u02f2\u0003\u0002\u0002\u0002\u02f2\u02f3\u0003\u0002\u0002",
    "\u0002\u02f3\u02f5\u0005B\"\u0002\u02f4\u02ed\u0003\u0002\u0002\u0002",
    "\u02f5\u02f8\u0003\u0002\u0002\u0002\u02f6\u02f4\u0003\u0002\u0002\u0002",
    "\u02f6\u02f7\u0003\u0002\u0002\u0002\u02f7\u02fa\u0003\u0002\u0002\u0002",
    "\u02f8\u02f6\u0003\u0002\u0002\u0002\u02f9\u02ea\u0003\u0002\u0002\u0002",
    "\u02f9\u02eb\u0003\u0002\u0002\u0002\u02faA\u0003\u0002\u0002\u0002",
    "\u02fb\u02fc\u00058\u001d\u0002\u02fc\u02fd\u00079\u0002\u0002\u02fd",
    "\u02fe\u00074\u0002\u0002\u02feC\u0003\u0002\u0002\u0002\u02ff\u0301",
    "\u0005\u001c\u000f\u0002\u0300\u02ff\u0003\u0002\u0002\u0002\u0300\u0301",
    "\u0003\u0002\u0002\u0002\u0301\u030d\u0003\u0002\u0002\u0002\u0302\u0304",
    "\u00079\u0002\u0002\u0303\u0302\u0003\u0002\u0002\u0002\u0303\u0304",
    "\u0003\u0002\u0002\u0002\u0304\u0305\u0003\u0002\u0002\u0002\u0305\u0309",
    "\u00078\u0002\u0002\u0306\u0308\t\u0002\u0002\u0002\u0307\u0306\u0003",
    "\u0002\u0002\u0002\u0308\u030b\u0003\u0002\u0002\u0002\u0309\u0307\u0003",
    "\u0002\u0002\u0002\u0309\u030a\u0003\u0002\u0002\u0002\u030a\u030c\u0003",
    "\u0002\u0002\u0002\u030b\u0309\u0003\u0002\u0002\u0002\u030c\u030e\u0005",
    "\"\u0012\u0002\u030d\u0303\u0003\u0002\u0002\u0002\u030d\u030e\u0003",
    "\u0002\u0002\u0002\u030e\u0313\u0003\u0002\u0002\u0002\u030f\u0311\u0005",
    "\"\u0012\u0002\u0310\u030f\u0003\u0002\u0002\u0002\u0310\u0311\u0003",
    "\u0002\u0002\u0002\u0311\u0313\u0003\u0002\u0002\u0002\u0312\u0300\u0003",
    "\u0002\u0002\u0002\u0312\u0310\u0003\u0002\u0002\u0002\u0313E\u0003",
    "\u0002\u0002\u0002\u0314\u0315\u0007)\u0002\u0002\u0315\u0316\u0007",
    "9\u0002\u0002\u0316\u0317\u00074\u0002\u0002\u0317\u0318\u00079\u0002",
    "\u0002\u0318\u0319\u0007*\u0002\u0002\u0319\u031a\u00079\u0002\u0002",
    "\u031a\u031b\u00074\u0002\u0002\u031bG\u0003\u0002\u0002\u0002\u031c",
    "\u031d\u0007\u0006\u0002\u0002\u031d\u031f\u00079\u0002\u0002\u031e",
    "\u031c\u0003\u0002\u0002\u0002\u031e\u031f\u0003\u0002\u0002\u0002\u031f",
    "\u0320\u0003\u0002\u0002\u0002\u0320\u0321\u0007+\u0002\u0002\u0321",
    "\u0322\u00079\u0002\u0002\u0322\u0323\u00074\u0002\u0002\u0323\u0324",
    "\u00079\u0002\u0002\u0324\u0325\u0007%\u0002\u0002\u0325\u0326\u0007",
    "9\u0002\u0002\u0326\u0327\u0005@!\u0002\u0327\u0328\u00079\u0002\u0002",
    "\u0328\u0329\u0007&\u0002\u0002\u0329\u032a\u00079\u0002\u0002\u032a",
    "\u032b\u0005> \u0002\u032bI\u0003\u0002\u0002\u0002\u0089MRX]chnsw{",
    "\u0081\u0086\u008c\u0091\u0097\u009c\u00a2\u00a7\u00ad\u00b2\u00b8\u00bd",
    "\u00c3\u00c8\u00ce\u00df\u00e5\u00e9\u00ec\u00ee\u00f2\u00f6\u00fd\u0101",
    "\u0105\u0109\u010d\u0111\u0117\u011b\u011f\u012a\u012e\u0132\u0137\u0140",
    "\u0144\u0148\u0151\u0155\u015a\u015e\u0165\u0169\u016d\u0171\u0173\u0178",
    "\u017c\u0180\u0186\u018a\u018f\u0192\u01a2\u01b1\u01b5\u01b8\u01ba\u01be",
    "\u01c4\u01ca\u01cf\u01d7\u01db\u01e1\u01e7\u01f2\u01f8\u01fb\u01ff\u0205",
    "\u0209\u020d\u0211\u0217\u021e\u0222\u0226\u022c\u0230\u0235\u023c\u023f",
    "\u0243\u0249\u024d\u0252\u0257\u025c\u0262\u0266\u026b\u026e\u0273\u027a",
    "\u0280\u0285\u0289\u028e\u0298\u029c\u02a0\u02a7\u02ad\u02b6\u02b8\u02bd",
    "\u02cd\u02d3\u02d8\u02dc\u02e1\u02e8\u02ed\u02f1\u02f6\u02f9\u0300\u0303",
    "\u0309\u030d\u0310\u0312\u031e"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ null, "'globals'", "'endglobals'", "'array'", "'constant'", 
                     "'='", "'('", "')'", "'and'", "'or'", "'not'", "'+'", 
                     "'-'", "'*'", "'<'", "'<='", "'=='", "'!='", "'>'", 
                     "'>='", "'['", "']'", "'function'", "'local'", "'call'", 
                     "'set'", "'if'", "'then'", "'endif'", "'elseif'", "'else'", 
                     "'loop'", "'endloop'", "'exitwhen'", "'return'", "'takes'", 
                     "'returns'", "'endfunction'", "'nothing'", "'type'", 
                     "'extends'", "'native'", null, null, null, null, null, 
                     null, null, null, null, "'{'", "'}'", "','", null, 
                     null, "'/'" ];

var symbolicNames = [ null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, null, null, null, 
                      null, null, null, null, null, null, "BOOL_LITERAL", 
                      "INT_LITERAL", "DEC_INT_LITERAL", "OCT_INT_LITERAL", 
                      "HEX_INT_LITERAL", "ID_INT_LITERAL", "REAL_LITERAL", 
                      "STRING_LITERAL", "ID", "CURLY_L", "CURLY_R", "COMMA", 
                      "NEW_LINE", "WS", "SLASH", "COMMENT" ];

var ruleNames =  [ "root", "globalsBlock", "varName", "funcName", "globalDec", 
                   "surroundedExpr", "expr", "funcExpr", "arg_list", "arrayRead", 
                   "funcRef", "literal", "localVarDec", "localVarDec_list", 
                   "statement2", "statement", "statement_list", "callFunc", 
                   "setVar", "condition", "selection2", "selection", "loop", 
                   "exitwhen", "loopBody", "loopBodyLine", "rule_return", 
                   "typeName", "funcDec", "func", "funcReturnType", "funcParam_list", 
                   "funcParam", "funcBody", "typeDec", "nativeDec" ];

function JASSParser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

JASSParser.prototype = Object.create(antlr4.Parser.prototype);
JASSParser.prototype.constructor = JASSParser;

Object.defineProperty(JASSParser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

JASSParser.EOF = antlr4.Token.EOF;
JASSParser.T__0 = 1;
JASSParser.T__1 = 2;
JASSParser.T__2 = 3;
JASSParser.T__3 = 4;
JASSParser.T__4 = 5;
JASSParser.T__5 = 6;
JASSParser.T__6 = 7;
JASSParser.T__7 = 8;
JASSParser.T__8 = 9;
JASSParser.T__9 = 10;
JASSParser.T__10 = 11;
JASSParser.T__11 = 12;
JASSParser.T__12 = 13;
JASSParser.T__13 = 14;
JASSParser.T__14 = 15;
JASSParser.T__15 = 16;
JASSParser.T__16 = 17;
JASSParser.T__17 = 18;
JASSParser.T__18 = 19;
JASSParser.T__19 = 20;
JASSParser.T__20 = 21;
JASSParser.T__21 = 22;
JASSParser.T__22 = 23;
JASSParser.T__23 = 24;
JASSParser.T__24 = 25;
JASSParser.T__25 = 26;
JASSParser.T__26 = 27;
JASSParser.T__27 = 28;
JASSParser.T__28 = 29;
JASSParser.T__29 = 30;
JASSParser.T__30 = 31;
JASSParser.T__31 = 32;
JASSParser.T__32 = 33;
JASSParser.T__33 = 34;
JASSParser.T__34 = 35;
JASSParser.T__35 = 36;
JASSParser.T__36 = 37;
JASSParser.T__37 = 38;
JASSParser.T__38 = 39;
JASSParser.T__39 = 40;
JASSParser.T__40 = 41;
JASSParser.BOOL_LITERAL = 42;
JASSParser.INT_LITERAL = 43;
JASSParser.DEC_INT_LITERAL = 44;
JASSParser.OCT_INT_LITERAL = 45;
JASSParser.HEX_INT_LITERAL = 46;
JASSParser.ID_INT_LITERAL = 47;
JASSParser.REAL_LITERAL = 48;
JASSParser.STRING_LITERAL = 49;
JASSParser.ID = 50;
JASSParser.CURLY_L = 51;
JASSParser.CURLY_R = 52;
JASSParser.COMMA = 53;
JASSParser.NEW_LINE = 54;
JASSParser.WS = 55;
JASSParser.SLASH = 56;
JASSParser.COMMENT = 57;

JASSParser.RULE_root = 0;
JASSParser.RULE_globalsBlock = 1;
JASSParser.RULE_varName = 2;
JASSParser.RULE_funcName = 3;
JASSParser.RULE_globalDec = 4;
JASSParser.RULE_surroundedExpr = 5;
JASSParser.RULE_expr = 6;
JASSParser.RULE_funcExpr = 7;
JASSParser.RULE_arg_list = 8;
JASSParser.RULE_arrayRead = 9;
JASSParser.RULE_funcRef = 10;
JASSParser.RULE_literal = 11;
JASSParser.RULE_localVarDec = 12;
JASSParser.RULE_localVarDec_list = 13;
JASSParser.RULE_statement2 = 14;
JASSParser.RULE_statement = 15;
JASSParser.RULE_statement_list = 16;
JASSParser.RULE_callFunc = 17;
JASSParser.RULE_setVar = 18;
JASSParser.RULE_condition = 19;
JASSParser.RULE_selection2 = 20;
JASSParser.RULE_selection = 21;
JASSParser.RULE_loop = 22;
JASSParser.RULE_exitwhen = 23;
JASSParser.RULE_loopBody = 24;
JASSParser.RULE_loopBodyLine = 25;
JASSParser.RULE_rule_return = 26;
JASSParser.RULE_typeName = 27;
JASSParser.RULE_funcDec = 28;
JASSParser.RULE_func = 29;
JASSParser.RULE_funcReturnType = 30;
JASSParser.RULE_funcParam_list = 31;
JASSParser.RULE_funcParam = 32;
JASSParser.RULE_funcBody = 33;
JASSParser.RULE_typeDec = 34;
JASSParser.RULE_nativeDec = 35;

function RootContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_root;
    return this;
}

RootContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RootContext.prototype.constructor = RootContext;

RootContext.prototype.globalsBlock = function() {
    return this.getTypedRuleContext(GlobalsBlockContext,0);
};

RootContext.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


RootContext.prototype.typeDec = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeDecContext);
    } else {
        return this.getTypedRuleContext(TypeDecContext,i);
    }
};

RootContext.prototype.nativeDec = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(NativeDecContext);
    } else {
        return this.getTypedRuleContext(NativeDecContext,i);
    }
};

RootContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


RootContext.prototype.func = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(FuncContext);
    } else {
        return this.getTypedRuleContext(FuncContext,i);
    }
};

RootContext.prototype.EOF = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.EOF);
    } else {
        return this.getToken(JASSParser.EOF, i);
    }
};


RootContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterRoot(this);
	}
};

RootContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitRoot(this);
	}
};

RootContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitRoot(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.RootContext = RootContext;

JASSParser.prototype.root = function() {

    var localctx = new RootContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, JASSParser.RULE_root);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 75;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,0,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 72;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                } 
            }
            this.state = 77;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,0,this._ctx);
        }

        this.state = 91;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.T__38) {
            this.state = 78;
            this.typeDec();
            this.state = 80;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 79;
                this.match(JASSParser.WS);
            }

            this.state = 82;
            this.match(JASSParser.NEW_LINE);
            this.state = 86;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,2,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 83;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    } 
                }
                this.state = 88;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,2,this._ctx);
            }

            this.state = 93;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 97;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,4,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 94;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                } 
            }
            this.state = 99;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,4,this._ctx);
        }

        this.state = 113;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.T__3 || _la===JASSParser.T__40) {
            this.state = 100;
            this.nativeDec();
            this.state = 102;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 101;
                this.match(JASSParser.WS);
            }

            this.state = 104;
            this.match(JASSParser.NEW_LINE);
            this.state = 108;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,6,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 105;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    } 
                }
                this.state = 110;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,6,this._ctx);
            }

            this.state = 115;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 117;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 116;
            this.match(JASSParser.WS);
        }

        this.state = 119;
        this.globalsBlock();
        this.state = 121;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 120;
            this.match(JASSParser.WS);
        }

        this.state = 123;
        this.match(JASSParser.NEW_LINE);
        this.state = 127;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,10,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 124;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                } 
            }
            this.state = 129;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,10,this._ctx);
        }

        this.state = 143;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,13,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 130;
                this.nativeDec();
                this.state = 132;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 131;
                    this.match(JASSParser.WS);
                }

                this.state = 134;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.EOF || _la===JASSParser.NEW_LINE)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                }
                this.state = 138;
                this._errHandler.sync(this);
                var _alt = this._interp.adaptivePredict(this._input,12,this._ctx)
                while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                    if(_alt===1) {
                        this.state = 135;
                        _la = this._input.LA(1);
                        if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                        this._errHandler.recoverInline(this);
                        }
                        else {
                        	this._errHandler.reportMatch(this);
                            this.consume();
                        } 
                    }
                    this.state = 140;
                    this._errHandler.sync(this);
                    _alt = this._interp.adaptivePredict(this._input,12,this._ctx);
                }
         
            }
            this.state = 145;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,13,this._ctx);
        }

        this.state = 149;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,14,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 146;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                } 
            }
            this.state = 151;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,14,this._ctx);
        }

        this.state = 165;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.T__3 || _la===JASSParser.T__21) {
            this.state = 152;
            this.func();
            this.state = 154;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 153;
                this.match(JASSParser.WS);
            }

            this.state = 156;
            this.match(JASSParser.NEW_LINE);
            this.state = 160;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,16,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 157;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    } 
                }
                this.state = 162;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,16,this._ctx);
            }

            this.state = 167;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 171;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
            this.state = 168;
            _la = this._input.LA(1);
            if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 173;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function GlobalsBlockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_globalsBlock;
    return this;
}

GlobalsBlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GlobalsBlockContext.prototype.constructor = GlobalsBlockContext;

GlobalsBlockContext.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


GlobalsBlockContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


GlobalsBlockContext.prototype.globalDec = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(GlobalDecContext);
    } else {
        return this.getTypedRuleContext(GlobalDecContext,i);
    }
};

GlobalsBlockContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterGlobalsBlock(this);
	}
};

GlobalsBlockContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitGlobalsBlock(this);
	}
};

GlobalsBlockContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitGlobalsBlock(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.GlobalsBlockContext = GlobalsBlockContext;

JASSParser.prototype.globalsBlock = function() {

    var localctx = new GlobalsBlockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, JASSParser.RULE_globalsBlock);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 174;
        this.match(JASSParser.T__0);
        this.state = 176;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 175;
            this.match(JASSParser.WS);
        }

        this.state = 178;
        this.match(JASSParser.NEW_LINE);
        this.state = 182;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,20,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 179;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                } 
            }
            this.state = 184;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,20,this._ctx);
        }

        this.state = 198;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.T__3 || _la===JASSParser.ID) {
            this.state = 185;
            this.globalDec();
            this.state = 187;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 186;
                this.match(JASSParser.WS);
            }

            this.state = 189;
            this.match(JASSParser.NEW_LINE);
            this.state = 193;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,22,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 190;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    } 
                }
                this.state = 195;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,22,this._ctx);
            }

            this.state = 200;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 204;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
            this.state = 201;
            _la = this._input.LA(1);
            if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 206;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 207;
        this.match(JASSParser.T__1);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VarNameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_varName;
    return this;
}

VarNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VarNameContext.prototype.constructor = VarNameContext;

VarNameContext.prototype.ID = function() {
    return this.getToken(JASSParser.ID, 0);
};

VarNameContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterVarName(this);
	}
};

VarNameContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitVarName(this);
	}
};

VarNameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitVarName(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.VarNameContext = VarNameContext;

JASSParser.prototype.varName = function() {

    var localctx = new VarNameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, JASSParser.RULE_varName);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 209;
        this.match(JASSParser.ID);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FuncNameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_funcName;
    return this;
}

FuncNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncNameContext.prototype.constructor = FuncNameContext;

FuncNameContext.prototype.ID = function() {
    return this.getToken(JASSParser.ID, 0);
};

FuncNameContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterFuncName(this);
	}
};

FuncNameContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitFuncName(this);
	}
};

FuncNameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitFuncName(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.FuncNameContext = FuncNameContext;

JASSParser.prototype.funcName = function() {

    var localctx = new FuncNameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, JASSParser.RULE_funcName);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 211;
        this.match(JASSParser.ID);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function GlobalDecContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_globalDec;
    this.type = null; // TypeNameContext
    this.name = null; // VarNameContext
    this.val = null; // ExprContext
    return this;
}

GlobalDecContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GlobalDecContext.prototype.constructor = GlobalDecContext;

GlobalDecContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


GlobalDecContext.prototype.typeName = function() {
    return this.getTypedRuleContext(TypeNameContext,0);
};

GlobalDecContext.prototype.varName = function() {
    return this.getTypedRuleContext(VarNameContext,0);
};

GlobalDecContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

GlobalDecContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterGlobalDec(this);
	}
};

GlobalDecContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitGlobalDec(this);
	}
};

GlobalDecContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitGlobalDec(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.GlobalDecContext = GlobalDecContext;

JASSParser.prototype.globalDec = function() {

    var localctx = new GlobalDecContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, JASSParser.RULE_globalDec);
    var _la = 0; // Token type
    try {
        this.state = 236;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,29,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 213;
            localctx.type = this.typeName();
            this.state = 214;
            this.match(JASSParser.WS);
            this.state = 215;
            this.match(JASSParser.T__2);
            this.state = 216;
            this.match(JASSParser.WS);
            this.state = 217;
            localctx.name = this.varName();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 221;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.T__3) {
                this.state = 219;
                this.match(JASSParser.T__3);
                this.state = 220;
                this.match(JASSParser.WS);
            }

            this.state = 223;
            localctx.type = this.typeName();
            this.state = 224;
            this.match(JASSParser.WS);
            this.state = 225;
            localctx.name = this.varName();
            this.state = 234;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,28,this._ctx);
            if(la_===1) {
                this.state = 227;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 226;
                    this.match(JASSParser.WS);
                }

                this.state = 229;
                this.match(JASSParser.T__4);
                this.state = 231;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 230;
                    this.match(JASSParser.WS);
                }

                this.state = 233;
                localctx.val = this.expr(0);

            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SurroundedExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_surroundedExpr;
    return this;
}

SurroundedExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SurroundedExprContext.prototype.constructor = SurroundedExprContext;

SurroundedExprContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

SurroundedExprContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


SurroundedExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterSurroundedExpr(this);
	}
};

SurroundedExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitSurroundedExpr(this);
	}
};

SurroundedExprContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitSurroundedExpr(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.SurroundedExprContext = SurroundedExprContext;

JASSParser.prototype.surroundedExpr = function() {

    var localctx = new SurroundedExprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, JASSParser.RULE_surroundedExpr);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 238;
        this.match(JASSParser.T__5);
        this.state = 240;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 239;
            this.match(JASSParser.WS);
        }

        this.state = 242;
        this.expr(0);
        this.state = 244;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 243;
            this.match(JASSParser.WS);
        }

        this.state = 246;
        this.match(JASSParser.T__6);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_expr;
    return this;
}

ExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExprContext.prototype.constructor = ExprContext;

ExprContext.prototype.expr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExprContext);
    } else {
        return this.getTypedRuleContext(ExprContext,i);
    }
};

ExprContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


ExprContext.prototype.literal = function() {
    return this.getTypedRuleContext(LiteralContext,0);
};

ExprContext.prototype.funcExpr = function() {
    return this.getTypedRuleContext(FuncExprContext,0);
};

ExprContext.prototype.varName = function() {
    return this.getTypedRuleContext(VarNameContext,0);
};

ExprContext.prototype.arrayRead = function() {
    return this.getTypedRuleContext(ArrayReadContext,0);
};

ExprContext.prototype.funcRef = function() {
    return this.getTypedRuleContext(FuncRefContext,0);
};

ExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterExpr(this);
	}
};

ExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitExpr(this);
	}
};

ExprContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitExpr(this);
    } else {
        return visitor.visitChildren(this);
    }
};



JASSParser.prototype.expr = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new ExprContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 12;
    this.enterRecursionRule(localctx, 12, JASSParser.RULE_expr, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 326;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,47,this._ctx);
        switch(la_) {
        case 1:
            this.state = 249;
            this.match(JASSParser.T__5);
            this.state = 251;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 250;
                this.match(JASSParser.WS);
            }

            this.state = 253;
            this.expr(0);
            this.state = 255;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 254;
                this.match(JASSParser.WS);
            }

            this.state = 257;
            this.match(JASSParser.T__6);
            this.state = 259;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 258;
                this.match(JASSParser.WS);
            }

            this.state = 261;
            _la = this._input.LA(1);
            if(!(_la===JASSParser.T__7 || _la===JASSParser.T__8)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 263;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 262;
                this.match(JASSParser.WS);
            }

            this.state = 265;
            this.match(JASSParser.T__5);
            this.state = 267;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 266;
                this.match(JASSParser.WS);
            }

            this.state = 269;
            this.expr(0);
            this.state = 271;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 270;
                this.match(JASSParser.WS);
            }

            this.state = 273;
            this.match(JASSParser.T__6);
            break;

        case 2:
            this.state = 275;
            this.match(JASSParser.T__5);
            this.state = 277;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 276;
                this.match(JASSParser.WS);
            }

            this.state = 279;
            this.expr(0);
            this.state = 281;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 280;
                this.match(JASSParser.WS);
            }

            this.state = 283;
            this.match(JASSParser.T__6);
            this.state = 285;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 284;
                this.match(JASSParser.WS);
            }

            this.state = 287;
            _la = this._input.LA(1);
            if(!(_la===JASSParser.T__7 || _la===JASSParser.T__8)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 288;
            this.match(JASSParser.WS);
            this.state = 289;
            this.expr(11);
            break;

        case 3:
            this.state = 291;
            this.match(JASSParser.T__9);
            this.state = 304;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case JASSParser.WS:
                this.state = 292;
                this.match(JASSParser.WS);
                this.state = 293;
                this.expr(0);
                break;
            case JASSParser.T__5:
                this.state = 294;
                this.match(JASSParser.T__5);
                this.state = 296;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 295;
                    this.match(JASSParser.WS);
                }

                this.state = 298;
                this.expr(0);
                this.state = 300;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 299;
                    this.match(JASSParser.WS);
                }

                this.state = 302;
                this.match(JASSParser.T__6);
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            break;

        case 4:
            this.state = 306;
            this.literal();
            break;

        case 5:
            this.state = 307;
            _la = this._input.LA(1);
            if(!(_la===JASSParser.T__10 || _la===JASSParser.T__11)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 309;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 308;
                this.match(JASSParser.WS);
            }

            this.state = 311;
            this.expr(7);
            break;

        case 6:
            this.state = 312;
            this.funcExpr();
            break;

        case 7:
            this.state = 313;
            this.varName();
            break;

        case 8:
            this.state = 314;
            this.arrayRead();
            break;

        case 9:
            this.state = 315;
            this.funcRef();
            break;

        case 10:
            this.state = 316;
            this.match(JASSParser.T__5);
            this.state = 318;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 317;
                this.match(JASSParser.WS);
            }

            this.state = 320;
            this.expr(0);
            this.state = 322;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 321;
                this.match(JASSParser.WS);
            }

            this.state = 324;
            this.match(JASSParser.T__6);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 369;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,56,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 367;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,55,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new ExprContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, JASSParser.RULE_expr);
                    this.state = 328;
                    if (!( this.precpred(this._ctx, 14))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 14)");
                    }
                    this.state = 329;
                    this.match(JASSParser.WS);
                    this.state = 330;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.T__7 || _la===JASSParser.T__8)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 331;
                    this.match(JASSParser.WS);
                    this.state = 332;
                    this.expr(15);
                    break;

                case 2:
                    localctx = new ExprContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, JASSParser.RULE_expr);
                    this.state = 333;
                    if (!( this.precpred(this._ctx, 8))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
                    }
                    this.state = 335;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 334;
                        this.match(JASSParser.WS);
                    }

                    this.state = 337;
                    _la = this._input.LA(1);
                    if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << JASSParser.T__10) | (1 << JASSParser.T__11) | (1 << JASSParser.T__12))) !== 0) || _la===JASSParser.SLASH)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 339;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 338;
                        this.match(JASSParser.WS);
                    }

                    this.state = 341;
                    this.expr(9);
                    break;

                case 3:
                    localctx = new ExprContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, JASSParser.RULE_expr);
                    this.state = 342;
                    if (!( this.precpred(this._ctx, 6))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
                    }
                    this.state = 344;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 343;
                        this.match(JASSParser.WS);
                    }

                    this.state = 346;
                    _la = this._input.LA(1);
                    if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << JASSParser.T__13) | (1 << JASSParser.T__14) | (1 << JASSParser.T__15) | (1 << JASSParser.T__16) | (1 << JASSParser.T__17) | (1 << JASSParser.T__18))) !== 0))) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 348;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 347;
                        this.match(JASSParser.WS);
                    }

                    this.state = 350;
                    this.expr(7);
                    break;

                case 4:
                    localctx = new ExprContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, JASSParser.RULE_expr);
                    this.state = 351;
                    if (!( this.precpred(this._ctx, 12))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 12)");
                    }
                    this.state = 352;
                    this.match(JASSParser.WS);
                    this.state = 353;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.T__7 || _la===JASSParser.T__8)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 355;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 354;
                        this.match(JASSParser.WS);
                    }

                    this.state = 357;
                    this.match(JASSParser.T__5);
                    this.state = 359;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 358;
                        this.match(JASSParser.WS);
                    }

                    this.state = 361;
                    this.expr(0);
                    this.state = 363;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 362;
                        this.match(JASSParser.WS);
                    }

                    this.state = 365;
                    this.match(JASSParser.T__6);
                    break;

                } 
            }
            this.state = 371;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,56,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function FuncExprContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_funcExpr;
    return this;
}

FuncExprContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncExprContext.prototype.constructor = FuncExprContext;

FuncExprContext.prototype.funcName = function() {
    return this.getTypedRuleContext(FuncNameContext,0);
};

FuncExprContext.prototype.arg_list = function() {
    return this.getTypedRuleContext(Arg_listContext,0);
};

FuncExprContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


FuncExprContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterFuncExpr(this);
	}
};

FuncExprContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitFuncExpr(this);
	}
};

FuncExprContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitFuncExpr(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.FuncExprContext = FuncExprContext;

JASSParser.prototype.funcExpr = function() {

    var localctx = new FuncExprContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, JASSParser.RULE_funcExpr);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 372;
        this.funcName();
        this.state = 374;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 373;
            this.match(JASSParser.WS);
        }

        this.state = 376;
        this.match(JASSParser.T__5);
        this.state = 378;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,58,this._ctx);
        if(la_===1) {
            this.state = 377;
            this.match(JASSParser.WS);

        }
        this.state = 380;
        this.arg_list();
        this.state = 382;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 381;
            this.match(JASSParser.WS);
        }

        this.state = 384;
        this.match(JASSParser.T__6);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Arg_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_arg_list;
    return this;
}

Arg_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Arg_listContext.prototype.constructor = Arg_listContext;

Arg_listContext.prototype.expr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExprContext);
    } else {
        return this.getTypedRuleContext(ExprContext,i);
    }
};

Arg_listContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


Arg_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterArg_list(this);
	}
};

Arg_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitArg_list(this);
	}
};

Arg_listContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitArg_list(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.Arg_listContext = Arg_listContext;

JASSParser.prototype.arg_list = function() {

    var localctx = new Arg_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, JASSParser.RULE_arg_list);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 400;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << JASSParser.T__5) | (1 << JASSParser.T__9) | (1 << JASSParser.T__10) | (1 << JASSParser.T__11) | (1 << JASSParser.T__21))) !== 0) || ((((_la - 42)) & ~0x1f) == 0 && ((1 << (_la - 42)) & ((1 << (JASSParser.BOOL_LITERAL - 42)) | (1 << (JASSParser.INT_LITERAL - 42)) | (1 << (JASSParser.REAL_LITERAL - 42)) | (1 << (JASSParser.STRING_LITERAL - 42)) | (1 << (JASSParser.ID - 42)))) !== 0)) {
            this.state = 386;
            this.expr(0);
            this.state = 397;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,62,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 388;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 387;
                        this.match(JASSParser.WS);
                    }

                    this.state = 390;
                    this.match(JASSParser.COMMA);
                    this.state = 392;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 391;
                        this.match(JASSParser.WS);
                    }

                    this.state = 394;
                    this.expr(0); 
                }
                this.state = 399;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,62,this._ctx);
            }

        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ArrayReadContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_arrayRead;
    return this;
}

ArrayReadContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArrayReadContext.prototype.constructor = ArrayReadContext;

ArrayReadContext.prototype.varName = function() {
    return this.getTypedRuleContext(VarNameContext,0);
};

ArrayReadContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

ArrayReadContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterArrayRead(this);
	}
};

ArrayReadContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitArrayRead(this);
	}
};

ArrayReadContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitArrayRead(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.ArrayReadContext = ArrayReadContext;

JASSParser.prototype.arrayRead = function() {

    var localctx = new ArrayReadContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, JASSParser.RULE_arrayRead);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 402;
        this.varName();
        this.state = 403;
        this.match(JASSParser.T__19);
        this.state = 404;
        this.expr(0);
        this.state = 405;
        this.match(JASSParser.T__20);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FuncRefContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_funcRef;
    return this;
}

FuncRefContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncRefContext.prototype.constructor = FuncRefContext;

FuncRefContext.prototype.WS = function() {
    return this.getToken(JASSParser.WS, 0);
};

FuncRefContext.prototype.funcName = function() {
    return this.getTypedRuleContext(FuncNameContext,0);
};

FuncRefContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterFuncRef(this);
	}
};

FuncRefContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitFuncRef(this);
	}
};

FuncRefContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitFuncRef(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.FuncRefContext = FuncRefContext;

JASSParser.prototype.funcRef = function() {

    var localctx = new FuncRefContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, JASSParser.RULE_funcRef);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 407;
        this.match(JASSParser.T__21);
        this.state = 408;
        this.match(JASSParser.WS);
        this.state = 409;
        this.funcName();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LiteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_literal;
    return this;
}

LiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LiteralContext.prototype.constructor = LiteralContext;

LiteralContext.prototype.BOOL_LITERAL = function() {
    return this.getToken(JASSParser.BOOL_LITERAL, 0);
};

LiteralContext.prototype.INT_LITERAL = function() {
    return this.getToken(JASSParser.INT_LITERAL, 0);
};

LiteralContext.prototype.REAL_LITERAL = function() {
    return this.getToken(JASSParser.REAL_LITERAL, 0);
};

LiteralContext.prototype.STRING_LITERAL = function() {
    return this.getToken(JASSParser.STRING_LITERAL, 0);
};

LiteralContext.prototype.funcRef = function() {
    return this.getTypedRuleContext(FuncRefContext,0);
};

LiteralContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterLiteral(this);
	}
};

LiteralContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitLiteral(this);
	}
};

LiteralContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitLiteral(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.LiteralContext = LiteralContext;

JASSParser.prototype.literal = function() {

    var localctx = new LiteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, JASSParser.RULE_literal);
    try {
        this.state = 416;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case JASSParser.BOOL_LITERAL:
            this.enterOuterAlt(localctx, 1);
            this.state = 411;
            this.match(JASSParser.BOOL_LITERAL);
            break;
        case JASSParser.INT_LITERAL:
            this.enterOuterAlt(localctx, 2);
            this.state = 412;
            this.match(JASSParser.INT_LITERAL);
            break;
        case JASSParser.REAL_LITERAL:
            this.enterOuterAlt(localctx, 3);
            this.state = 413;
            this.match(JASSParser.REAL_LITERAL);
            break;
        case JASSParser.STRING_LITERAL:
            this.enterOuterAlt(localctx, 4);
            this.state = 414;
            this.match(JASSParser.STRING_LITERAL);
            break;
        case JASSParser.T__21:
            this.enterOuterAlt(localctx, 5);
            this.state = 415;
            this.funcRef();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LocalVarDecContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_localVarDec;
    this.name = null; // VarNameContext
    return this;
}

LocalVarDecContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LocalVarDecContext.prototype.constructor = LocalVarDecContext;

LocalVarDecContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


LocalVarDecContext.prototype.typeName = function() {
    return this.getTypedRuleContext(TypeNameContext,0);
};

LocalVarDecContext.prototype.varName = function() {
    return this.getTypedRuleContext(VarNameContext,0);
};

LocalVarDecContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

LocalVarDecContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterLocalVarDec(this);
	}
};

LocalVarDecContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitLocalVarDec(this);
	}
};

LocalVarDecContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitLocalVarDec(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.LocalVarDecContext = LocalVarDecContext;

JASSParser.prototype.localVarDec = function() {

    var localctx = new LocalVarDecContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, JASSParser.RULE_localVarDec);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 418;
        this.match(JASSParser.T__22);
        this.state = 440;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,68,this._ctx);
        switch(la_) {
        case 1:
            this.state = 419;
            this.match(JASSParser.WS);
            this.state = 420;
            this.typeName();
            this.state = 421;
            this.match(JASSParser.WS);
            this.state = 422;
            this.match(JASSParser.T__2);
            this.state = 423;
            this.match(JASSParser.WS);
            this.state = 424;
            localctx.name = this.varName();
            break;

        case 2:
            this.state = 426;
            this.match(JASSParser.WS);
            this.state = 427;
            this.typeName();
            this.state = 428;
            this.match(JASSParser.WS);
            this.state = 429;
            localctx.name = this.varName();
            this.state = 438;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,67,this._ctx);
            if(la_===1) {
                this.state = 431;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 430;
                    this.match(JASSParser.WS);
                }

                this.state = 433;
                this.match(JASSParser.T__4);
                this.state = 435;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 434;
                    this.match(JASSParser.WS);
                }

                this.state = 437;
                this.expr(0);

            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LocalVarDec_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_localVarDec_list;
    return this;
}

LocalVarDec_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LocalVarDec_listContext.prototype.constructor = LocalVarDec_listContext;

LocalVarDec_listContext.prototype.localVarDec = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(LocalVarDecContext);
    } else {
        return this.getTypedRuleContext(LocalVarDecContext,i);
    }
};

LocalVarDec_listContext.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


LocalVarDec_listContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


LocalVarDec_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterLocalVarDec_list(this);
	}
};

LocalVarDec_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitLocalVarDec_list(this);
	}
};

LocalVarDec_listContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitLocalVarDec_list(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.LocalVarDec_listContext = LocalVarDec_listContext;

JASSParser.prototype.localVarDec_list = function() {

    var localctx = new LocalVarDec_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, JASSParser.RULE_localVarDec_list);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 442;
        this.localVarDec();
        this.state = 456;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,71,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 444;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 443;
                    this.match(JASSParser.WS);
                }

                this.state = 446;
                this.match(JASSParser.NEW_LINE);
                this.state = 450;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
                    this.state = 447;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 452;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 453;
                this.localVarDec(); 
            }
            this.state = 458;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,71,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Statement2Context(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_statement2;
    return this;
}

Statement2Context.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Statement2Context.prototype.constructor = Statement2Context;

Statement2Context.prototype.callFunc = function() {
    return this.getTypedRuleContext(CallFuncContext,0);
};

Statement2Context.prototype.selection = function() {
    return this.getTypedRuleContext(SelectionContext,0);
};

Statement2Context.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterStatement2(this);
	}
};

Statement2Context.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitStatement2(this);
	}
};

Statement2Context.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitStatement2(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.Statement2Context = Statement2Context;

JASSParser.prototype.statement2 = function() {

    var localctx = new Statement2Context(this, this._ctx, this.state);
    this.enterRule(localctx, 28, JASSParser.RULE_statement2);
    try {
        this.state = 461;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case JASSParser.T__23:
            this.enterOuterAlt(localctx, 1);
            this.state = 459;
            this.callFunc();
            break;
        case JASSParser.T__25:
            this.enterOuterAlt(localctx, 2);
            this.state = 460;
            this.selection();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function StatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_statement;
    return this;
}

StatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StatementContext.prototype.constructor = StatementContext;

StatementContext.prototype.callFunc = function() {
    return this.getTypedRuleContext(CallFuncContext,0);
};

StatementContext.prototype.setVar = function() {
    return this.getTypedRuleContext(SetVarContext,0);
};

StatementContext.prototype.selection = function() {
    return this.getTypedRuleContext(SelectionContext,0);
};

StatementContext.prototype.loop = function() {
    return this.getTypedRuleContext(LoopContext,0);
};

StatementContext.prototype.exitwhen = function() {
    return this.getTypedRuleContext(ExitwhenContext,0);
};

StatementContext.prototype.rule_return = function() {
    return this.getTypedRuleContext(Rule_returnContext,0);
};

StatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterStatement(this);
	}
};

StatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitStatement(this);
	}
};

StatementContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitStatement(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.StatementContext = StatementContext;

JASSParser.prototype.statement = function() {

    var localctx = new StatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, JASSParser.RULE_statement);
    try {
        this.state = 469;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case JASSParser.T__23:
            this.enterOuterAlt(localctx, 1);
            this.state = 463;
            this.callFunc();
            break;
        case JASSParser.T__24:
            this.enterOuterAlt(localctx, 2);
            this.state = 464;
            this.setVar();
            break;
        case JASSParser.T__25:
            this.enterOuterAlt(localctx, 3);
            this.state = 465;
            this.selection();
            break;
        case JASSParser.T__30:
            this.enterOuterAlt(localctx, 4);
            this.state = 466;
            this.loop();
            break;
        case JASSParser.T__32:
            this.enterOuterAlt(localctx, 5);
            this.state = 467;
            this.exitwhen();
            break;
        case JASSParser.T__33:
            this.enterOuterAlt(localctx, 6);
            this.state = 468;
            this.rule_return();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Statement_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_statement_list;
    return this;
}

Statement_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Statement_listContext.prototype.constructor = Statement_listContext;

Statement_listContext.prototype.statement = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(StatementContext);
    } else {
        return this.getTypedRuleContext(StatementContext,i);
    }
};

Statement_listContext.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


Statement_listContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


Statement_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterStatement_list(this);
	}
};

Statement_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitStatement_list(this);
	}
};

Statement_listContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitStatement_list(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.Statement_listContext = Statement_listContext;

JASSParser.prototype.statement_list = function() {

    var localctx = new Statement_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, JASSParser.RULE_statement_list);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 471;
        this.statement();
        this.state = 485;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,76,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 473;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 472;
                    this.match(JASSParser.WS);
                }

                this.state = 475;
                this.match(JASSParser.NEW_LINE);
                this.state = 479;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
                    this.state = 476;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 481;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 482;
                this.statement(); 
            }
            this.state = 487;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,76,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CallFuncContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_callFunc;
    return this;
}

CallFuncContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CallFuncContext.prototype.constructor = CallFuncContext;

CallFuncContext.prototype.WS = function() {
    return this.getToken(JASSParser.WS, 0);
};

CallFuncContext.prototype.funcExpr = function() {
    return this.getTypedRuleContext(FuncExprContext,0);
};

CallFuncContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterCallFunc(this);
	}
};

CallFuncContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitCallFunc(this);
	}
};

CallFuncContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitCallFunc(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.CallFuncContext = CallFuncContext;

JASSParser.prototype.callFunc = function() {

    var localctx = new CallFuncContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, JASSParser.RULE_callFunc);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 488;
        this.match(JASSParser.T__23);
        this.state = 489;
        this.match(JASSParser.WS);
        this.state = 490;
        this.funcExpr();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SetVarContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_setVar;
    this.name = null; // VarNameContext
    this.index = null; // ExprContext
    this.val = null; // ExprContext
    return this;
}

SetVarContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SetVarContext.prototype.constructor = SetVarContext;

SetVarContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


SetVarContext.prototype.varName = function() {
    return this.getTypedRuleContext(VarNameContext,0);
};

SetVarContext.prototype.expr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExprContext);
    } else {
        return this.getTypedRuleContext(ExprContext,i);
    }
};

SetVarContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterSetVar(this);
	}
};

SetVarContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitSetVar(this);
	}
};

SetVarContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitSetVar(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.SetVarContext = SetVarContext;

JASSParser.prototype.setVar = function() {

    var localctx = new SetVarContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, JASSParser.RULE_setVar);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 492;
        this.match(JASSParser.T__24);
        this.state = 493;
        this.match(JASSParser.WS);
        this.state = 494;
        localctx.name = this.varName();
        this.state = 502;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,78,this._ctx);
        if(la_===1) {
            this.state = 496;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 495;
                this.match(JASSParser.WS);
            }

            this.state = 498;
            this.match(JASSParser.T__19);
            this.state = 499;
            localctx.index = this.expr(0);
            this.state = 500;
            this.match(JASSParser.T__20);

        }
        this.state = 505;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 504;
            this.match(JASSParser.WS);
        }

        this.state = 507;
        this.match(JASSParser.T__4);
        this.state = 509;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 508;
            this.match(JASSParser.WS);
        }

        this.state = 511;
        localctx.val = this.expr(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConditionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_condition;
    return this;
}

ConditionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConditionContext.prototype.constructor = ConditionContext;

ConditionContext.prototype.surroundedExpr = function() {
    return this.getTypedRuleContext(SurroundedExprContext,0);
};

ConditionContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

ConditionContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterCondition(this);
	}
};

ConditionContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitCondition(this);
	}
};

ConditionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitCondition(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.ConditionContext = ConditionContext;

JASSParser.prototype.condition = function() {

    var localctx = new ConditionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, JASSParser.RULE_condition);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 515;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,81,this._ctx);
        switch(la_) {
        case 1:
            this.state = 513;
            this.surroundedExpr();
            break;

        case 2:
            this.state = 514;
            this.expr(0);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Selection2Context(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_selection2;
    return this;
}

Selection2Context.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Selection2Context.prototype.constructor = Selection2Context;

Selection2Context.prototype.condition = function() {
    return this.getTypedRuleContext(ConditionContext,0);
};

Selection2Context.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


Selection2Context.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


Selection2Context.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterSelection2(this);
	}
};

Selection2Context.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitSelection2(this);
	}
};

Selection2Context.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitSelection2(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.Selection2Context = Selection2Context;

JASSParser.prototype.selection2 = function() {

    var localctx = new Selection2Context(this, this._ctx, this.state);
    this.enterRule(localctx, 40, JASSParser.RULE_selection2);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 517;
        this.match(JASSParser.T__25);
        this.state = 519;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 518;
            this.match(JASSParser.WS);
        }

        this.state = 521;
        this.condition();
        this.state = 523;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 522;
            this.match(JASSParser.WS);
        }

        this.state = 525;
        this.match(JASSParser.T__26);
        this.state = 527;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 526;
            this.match(JASSParser.WS);
        }

        this.state = 529;
        this.match(JASSParser.NEW_LINE);
        this.state = 533;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
            this.state = 530;
            _la = this._input.LA(1);
            if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 535;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 536;
        this.match(JASSParser.T__27);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SelectionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_selection;
    return this;
}

SelectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelectionContext.prototype.constructor = SelectionContext;

SelectionContext.prototype.condition = function() {
    return this.getTypedRuleContext(ConditionContext,0);
};

SelectionContext.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


SelectionContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


SelectionContext.prototype.statement_list = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(Statement_listContext);
    } else {
        return this.getTypedRuleContext(Statement_listContext,i);
    }
};

SelectionContext.prototype.surroundedExpr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(SurroundedExprContext);
    } else {
        return this.getTypedRuleContext(SurroundedExprContext,i);
    }
};

SelectionContext.prototype.expr = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ExprContext);
    } else {
        return this.getTypedRuleContext(ExprContext,i);
    }
};

SelectionContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterSelection(this);
	}
};

SelectionContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitSelection(this);
	}
};

SelectionContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitSelection(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.SelectionContext = SelectionContext;

JASSParser.prototype.selection = function() {

    var localctx = new SelectionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, JASSParser.RULE_selection);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 538;
        this.match(JASSParser.T__25);
        this.state = 540;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 539;
            this.match(JASSParser.WS);
        }

        this.state = 542;
        this.condition();
        this.state = 544;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 543;
            this.match(JASSParser.WS);
        }

        this.state = 546;
        this.match(JASSParser.T__26);
        this.state = 548;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 547;
            this.match(JASSParser.WS);
        }

        this.state = 550;
        this.match(JASSParser.NEW_LINE);
        this.state = 554;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,89,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 551;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                } 
            }
            this.state = 556;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,89,this._ctx);
        }

        this.state = 558;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(((((_la - 24)) & ~0x1f) == 0 && ((1 << (_la - 24)) & ((1 << (JASSParser.T__23 - 24)) | (1 << (JASSParser.T__24 - 24)) | (1 << (JASSParser.T__25 - 24)) | (1 << (JASSParser.T__30 - 24)) | (1 << (JASSParser.T__32 - 24)) | (1 << (JASSParser.T__33 - 24)))) !== 0)) {
            this.state = 557;
            this.statement_list();
        }

        this.state = 563;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,91,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 560;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                } 
            }
            this.state = 565;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,91,this._ctx);
        }

        this.state = 597;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.T__28) {
            this.state = 566;
            this.match(JASSParser.T__28);
            this.state = 570;
            this._errHandler.sync(this);
            switch(this._input.LA(1)) {
            case JASSParser.T__5:
                this.state = 567;
                this.surroundedExpr();
                break;
            case JASSParser.WS:
                this.state = 568;
                this.match(JASSParser.WS);
                this.state = 569;
                this.expr(0);
                break;
            default:
                throw new antlr4.error.NoViableAltException(this);
            }
            this.state = 573;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 572;
                this.match(JASSParser.WS);
            }

            this.state = 575;
            this.match(JASSParser.T__26);
            this.state = 577;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 576;
                this.match(JASSParser.WS);
            }

            this.state = 579;
            this.match(JASSParser.NEW_LINE);
            this.state = 583;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,95,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 580;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    } 
                }
                this.state = 585;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,95,this._ctx);
            }

            this.state = 587;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(((((_la - 24)) & ~0x1f) == 0 && ((1 << (_la - 24)) & ((1 << (JASSParser.T__23 - 24)) | (1 << (JASSParser.T__24 - 24)) | (1 << (JASSParser.T__25 - 24)) | (1 << (JASSParser.T__30 - 24)) | (1 << (JASSParser.T__32 - 24)) | (1 << (JASSParser.T__33 - 24)))) !== 0)) {
                this.state = 586;
                this.statement_list();
            }

            this.state = 592;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,97,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 589;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    } 
                }
                this.state = 594;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,97,this._ctx);
            }

            this.state = 599;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 620;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.T__29) {
            this.state = 600;
            this.match(JASSParser.T__29);
            this.state = 602;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 601;
                this.match(JASSParser.WS);
            }

            this.state = 604;
            this.match(JASSParser.NEW_LINE);
            this.state = 608;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,100,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 605;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    } 
                }
                this.state = 610;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,100,this._ctx);
            }

            this.state = 612;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(((((_la - 24)) & ~0x1f) == 0 && ((1 << (_la - 24)) & ((1 << (JASSParser.T__23 - 24)) | (1 << (JASSParser.T__24 - 24)) | (1 << (JASSParser.T__25 - 24)) | (1 << (JASSParser.T__30 - 24)) | (1 << (JASSParser.T__32 - 24)) | (1 << (JASSParser.T__33 - 24)))) !== 0)) {
                this.state = 611;
                this.statement_list();
            }

            this.state = 617;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,102,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 614;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    } 
                }
                this.state = 619;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,102,this._ctx);
            }

        }

        this.state = 625;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
            this.state = 622;
            _la = this._input.LA(1);
            if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 627;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 628;
        this.match(JASSParser.T__27);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LoopContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_loop;
    return this;
}

LoopContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LoopContext.prototype.constructor = LoopContext;

LoopContext.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


LoopContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


LoopContext.prototype.loopBody = function() {
    return this.getTypedRuleContext(LoopBodyContext,0);
};

LoopContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterLoop(this);
	}
};

LoopContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitLoop(this);
	}
};

LoopContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitLoop(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.LoopContext = LoopContext;

JASSParser.prototype.loop = function() {

    var localctx = new LoopContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, JASSParser.RULE_loop);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 630;
        this.match(JASSParser.T__30);
        this.state = 632;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 631;
            this.match(JASSParser.WS);
        }

        this.state = 634;
        this.match(JASSParser.NEW_LINE);
        this.state = 638;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,106,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 635;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                } 
            }
            this.state = 640;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,106,this._ctx);
        }

        this.state = 647;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(((((_la - 24)) & ~0x1f) == 0 && ((1 << (_la - 24)) & ((1 << (JASSParser.T__23 - 24)) | (1 << (JASSParser.T__24 - 24)) | (1 << (JASSParser.T__25 - 24)) | (1 << (JASSParser.T__30 - 24)) | (1 << (JASSParser.T__32 - 24)) | (1 << (JASSParser.T__33 - 24)))) !== 0)) {
            this.state = 641;
            this.loopBody();
            this.state = 643;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 642;
                this.match(JASSParser.WS);
            }

            this.state = 645;
            this.match(JASSParser.NEW_LINE);
        }

        this.state = 652;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
            this.state = 649;
            _la = this._input.LA(1);
            if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 654;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 655;
        this.match(JASSParser.T__31);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExitwhenContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_exitwhen;
    return this;
}

ExitwhenContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExitwhenContext.prototype.constructor = ExitwhenContext;

ExitwhenContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

ExitwhenContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


ExitwhenContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterExitwhen(this);
	}
};

ExitwhenContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitExitwhen(this);
	}
};

ExitwhenContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitExitwhen(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.ExitwhenContext = ExitwhenContext;

JASSParser.prototype.exitwhen = function() {

    var localctx = new ExitwhenContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, JASSParser.RULE_exitwhen);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 657;
        this.match(JASSParser.T__32);
        this.state = 670;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case JASSParser.WS:
            this.state = 658;
            this.match(JASSParser.WS);
            this.state = 659;
            this.expr(0);
            break;
        case JASSParser.T__5:
            this.state = 660;
            this.match(JASSParser.T__5);
            this.state = 662;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 661;
                this.match(JASSParser.WS);
            }

            this.state = 664;
            this.expr(0);
            this.state = 666;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 665;
                this.match(JASSParser.WS);
            }

            this.state = 668;
            this.match(JASSParser.T__6);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LoopBodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_loopBody;
    return this;
}

LoopBodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LoopBodyContext.prototype.constructor = LoopBodyContext;

LoopBodyContext.prototype.loopBodyLine = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(LoopBodyLineContext);
    } else {
        return this.getTypedRuleContext(LoopBodyLineContext,i);
    }
};

LoopBodyContext.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


LoopBodyContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


LoopBodyContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterLoopBody(this);
	}
};

LoopBodyContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitLoopBody(this);
	}
};

LoopBodyContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitLoopBody(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.LoopBodyContext = LoopBodyContext;

JASSParser.prototype.loopBody = function() {

    var localctx = new LoopBodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, JASSParser.RULE_loopBody);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 672;
        this.loopBodyLine();
        this.state = 683;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,114,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 673;
                this.match(JASSParser.NEW_LINE);
                this.state = 677;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
                    this.state = 674;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 679;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 680;
                this.loopBodyLine(); 
            }
            this.state = 685;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,114,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LoopBodyLineContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_loopBodyLine;
    return this;
}

LoopBodyLineContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LoopBodyLineContext.prototype.constructor = LoopBodyLineContext;

LoopBodyLineContext.prototype.statement_list = function() {
    return this.getTypedRuleContext(Statement_listContext,0);
};

LoopBodyLineContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterLoopBodyLine(this);
	}
};

LoopBodyLineContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitLoopBodyLine(this);
	}
};

LoopBodyLineContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitLoopBodyLine(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.LoopBodyLineContext = LoopBodyLineContext;

JASSParser.prototype.loopBodyLine = function() {

    var localctx = new LoopBodyLineContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, JASSParser.RULE_loopBodyLine);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 686;
        this.statement_list();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Rule_returnContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_rule_return;
    this.name = null; // ExprContext
    return this;
}

Rule_returnContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Rule_returnContext.prototype.constructor = Rule_returnContext;

Rule_returnContext.prototype.surroundedExpr = function() {
    return this.getTypedRuleContext(SurroundedExprContext,0);
};

Rule_returnContext.prototype.WS = function() {
    return this.getToken(JASSParser.WS, 0);
};

Rule_returnContext.prototype.expr = function() {
    return this.getTypedRuleContext(ExprContext,0);
};

Rule_returnContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterRule_return(this);
	}
};

Rule_returnContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitRule_return(this);
	}
};

Rule_returnContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitRule_return(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.Rule_returnContext = Rule_returnContext;

JASSParser.prototype.rule_return = function() {

    var localctx = new Rule_returnContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, JASSParser.RULE_rule_return);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 688;
        this.match(JASSParser.T__33);
        this.state = 694;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case JASSParser.T__5:
            this.state = 689;
            this.surroundedExpr();
            break;
        case JASSParser.T__27:
        case JASSParser.T__28:
        case JASSParser.T__29:
        case JASSParser.NEW_LINE:
        case JASSParser.WS:
            this.state = 692;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,115,this._ctx);
            if(la_===1) {
                this.state = 690;
                this.match(JASSParser.WS);
                this.state = 691;
                localctx.name = this.expr(0);

            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeNameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_typeName;
    return this;
}

TypeNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeNameContext.prototype.constructor = TypeNameContext;

TypeNameContext.prototype.ID = function() {
    return this.getToken(JASSParser.ID, 0);
};

TypeNameContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterTypeName(this);
	}
};

TypeNameContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitTypeName(this);
	}
};

TypeNameContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitTypeName(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.TypeNameContext = TypeNameContext;

JASSParser.prototype.typeName = function() {

    var localctx = new TypeNameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, JASSParser.RULE_typeName);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 696;
        this.match(JASSParser.ID);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FuncDecContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_funcDec;
    this.name = null; // Token
    this.params = null; // FuncParam_listContext
    this.returnType = null; // FuncReturnTypeContext
    return this;
}

FuncDecContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncDecContext.prototype.constructor = FuncDecContext;

FuncDecContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


FuncDecContext.prototype.ID = function() {
    return this.getToken(JASSParser.ID, 0);
};

FuncDecContext.prototype.funcParam_list = function() {
    return this.getTypedRuleContext(FuncParam_listContext,0);
};

FuncDecContext.prototype.funcReturnType = function() {
    return this.getTypedRuleContext(FuncReturnTypeContext,0);
};

FuncDecContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterFuncDec(this);
	}
};

FuncDecContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitFuncDec(this);
	}
};

FuncDecContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitFuncDec(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.FuncDecContext = FuncDecContext;

JASSParser.prototype.funcDec = function() {

    var localctx = new FuncDecContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, JASSParser.RULE_funcDec);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 699;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.T__3) {
            this.state = 698;
            this.match(JASSParser.T__3);
        }

        this.state = 701;
        this.match(JASSParser.T__21);
        this.state = 702;
        this.match(JASSParser.WS);
        this.state = 703;
        localctx.name = this.match(JASSParser.ID);
        this.state = 704;
        this.match(JASSParser.WS);
        this.state = 705;
        this.match(JASSParser.T__34);
        this.state = 706;
        this.match(JASSParser.WS);
        this.state = 707;
        localctx.params = this.funcParam_list();
        this.state = 708;
        this.match(JASSParser.WS);
        this.state = 709;
        this.match(JASSParser.T__35);
        this.state = 710;
        this.match(JASSParser.WS);
        this.state = 711;
        localctx.returnType = this.funcReturnType();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FuncContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_func;
    this.body = null; // FuncBodyContext
    return this;
}

FuncContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncContext.prototype.constructor = FuncContext;

FuncContext.prototype.funcDec = function() {
    return this.getTypedRuleContext(FuncDecContext,0);
};

FuncContext.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


FuncContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


FuncContext.prototype.funcBody = function() {
    return this.getTypedRuleContext(FuncBodyContext,0);
};

FuncContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterFunc(this);
	}
};

FuncContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitFunc(this);
	}
};

FuncContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitFunc(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.FuncContext = FuncContext;

JASSParser.prototype.func = function() {

    var localctx = new FuncContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, JASSParser.RULE_func);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 713;
        this.funcDec();
        this.state = 715;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.WS) {
            this.state = 714;
            this.match(JASSParser.WS);
        }

        this.state = 717;
        this.match(JASSParser.NEW_LINE);
        this.state = 721;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,119,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 718;
                _la = this._input.LA(1);
                if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                this._errHandler.recoverInline(this);
                }
                else {
                	this._errHandler.reportMatch(this);
                    this.consume();
                } 
            }
            this.state = 723;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,119,this._ctx);
        }

        this.state = 730;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,121,this._ctx);
        if(la_===1) {
            this.state = 724;
            localctx.body = this.funcBody();
            this.state = 726;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.WS) {
                this.state = 725;
                this.match(JASSParser.WS);
            }

            this.state = 728;
            this.match(JASSParser.NEW_LINE);

        }
        this.state = 735;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
            this.state = 732;
            _la = this._input.LA(1);
            if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
            this._errHandler.recoverInline(this);
            }
            else {
            	this._errHandler.reportMatch(this);
                this.consume();
            }
            this.state = 737;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 738;
        this.match(JASSParser.T__36);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FuncReturnTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_funcReturnType;
    return this;
}

FuncReturnTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncReturnTypeContext.prototype.constructor = FuncReturnTypeContext;

FuncReturnTypeContext.prototype.typeName = function() {
    return this.getTypedRuleContext(TypeNameContext,0);
};

FuncReturnTypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterFuncReturnType(this);
	}
};

FuncReturnTypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitFuncReturnType(this);
	}
};

FuncReturnTypeContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitFuncReturnType(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.FuncReturnTypeContext = FuncReturnTypeContext;

JASSParser.prototype.funcReturnType = function() {

    var localctx = new FuncReturnTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, JASSParser.RULE_funcReturnType);
    try {
        this.state = 742;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case JASSParser.T__37:
            this.enterOuterAlt(localctx, 1);
            this.state = 740;
            this.match(JASSParser.T__37);
            break;
        case JASSParser.ID:
            this.enterOuterAlt(localctx, 2);
            this.state = 741;
            this.typeName();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FuncParam_listContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_funcParam_list;
    this.params = null; // FuncParamContext
    return this;
}

FuncParam_listContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncParam_listContext.prototype.constructor = FuncParam_listContext;

FuncParam_listContext.prototype.funcParam = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(FuncParamContext);
    } else {
        return this.getTypedRuleContext(FuncParamContext,i);
    }
};

FuncParam_listContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


FuncParam_listContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterFuncParam_list(this);
	}
};

FuncParam_listContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitFuncParam_list(this);
	}
};

FuncParam_listContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitFuncParam_list(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.FuncParam_listContext = FuncParam_listContext;

JASSParser.prototype.funcParam_list = function() {

    var localctx = new FuncParam_listContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, JASSParser.RULE_funcParam_list);
    var _la = 0; // Token type
    try {
        this.state = 759;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case JASSParser.T__37:
            this.enterOuterAlt(localctx, 1);
            this.state = 744;
            this.match(JASSParser.T__37);
            break;
        case JASSParser.ID:
            this.enterOuterAlt(localctx, 2);
            this.state = 745;
            localctx.params = this.funcParam();
            this.state = 756;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,126,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 747;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 746;
                        this.match(JASSParser.WS);
                    }

                    this.state = 749;
                    this.match(JASSParser.COMMA);
                    this.state = 751;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===JASSParser.WS) {
                        this.state = 750;
                        this.match(JASSParser.WS);
                    }

                    this.state = 753;
                    this.funcParam(); 
                }
                this.state = 758;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,126,this._ctx);
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FuncParamContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_funcParam;
    return this;
}

FuncParamContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncParamContext.prototype.constructor = FuncParamContext;

FuncParamContext.prototype.typeName = function() {
    return this.getTypedRuleContext(TypeNameContext,0);
};

FuncParamContext.prototype.WS = function() {
    return this.getToken(JASSParser.WS, 0);
};

FuncParamContext.prototype.ID = function() {
    return this.getToken(JASSParser.ID, 0);
};

FuncParamContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterFuncParam(this);
	}
};

FuncParamContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitFuncParam(this);
	}
};

FuncParamContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitFuncParam(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.FuncParamContext = FuncParamContext;

JASSParser.prototype.funcParam = function() {

    var localctx = new FuncParamContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, JASSParser.RULE_funcParam);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 761;
        this.typeName();
        this.state = 762;
        this.match(JASSParser.WS);
        this.state = 763;
        this.match(JASSParser.ID);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FuncBodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_funcBody;
    return this;
}

FuncBodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FuncBodyContext.prototype.constructor = FuncBodyContext;

FuncBodyContext.prototype.localVarDec_list = function() {
    return this.getTypedRuleContext(LocalVarDec_listContext,0);
};

FuncBodyContext.prototype.NEW_LINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.NEW_LINE);
    } else {
        return this.getToken(JASSParser.NEW_LINE, i);
    }
};


FuncBodyContext.prototype.statement_list = function() {
    return this.getTypedRuleContext(Statement_listContext,0);
};

FuncBodyContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


FuncBodyContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterFuncBody(this);
	}
};

FuncBodyContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitFuncBody(this);
	}
};

FuncBodyContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitFuncBody(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.FuncBodyContext = FuncBodyContext;

JASSParser.prototype.funcBody = function() {

    var localctx = new FuncBodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 66, JASSParser.RULE_funcBody);
    var _la = 0; // Token type
    try {
        this.state = 784;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,133,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 766;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===JASSParser.T__22) {
                this.state = 765;
                this.localVarDec_list();
            }

            this.state = 779;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,131,this._ctx);
            if(la_===1) {
                this.state = 769;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                if(_la===JASSParser.WS) {
                    this.state = 768;
                    this.match(JASSParser.WS);
                }

                this.state = 771;
                this.match(JASSParser.NEW_LINE);
                this.state = 775;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                while(_la===JASSParser.NEW_LINE || _la===JASSParser.WS) {
                    this.state = 772;
                    _la = this._input.LA(1);
                    if(!(_la===JASSParser.NEW_LINE || _la===JASSParser.WS)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                    	this._errHandler.reportMatch(this);
                        this.consume();
                    }
                    this.state = 777;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                }
                this.state = 778;
                this.statement_list();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 782;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(((((_la - 24)) & ~0x1f) == 0 && ((1 << (_la - 24)) & ((1 << (JASSParser.T__23 - 24)) | (1 << (JASSParser.T__24 - 24)) | (1 << (JASSParser.T__25 - 24)) | (1 << (JASSParser.T__30 - 24)) | (1 << (JASSParser.T__32 - 24)) | (1 << (JASSParser.T__33 - 24)))) !== 0)) {
                this.state = 781;
                this.statement_list();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeDecContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_typeDec;
    this.name = null; // Token
    this.parent = null; // Token
    return this;
}

TypeDecContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeDecContext.prototype.constructor = TypeDecContext;

TypeDecContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


TypeDecContext.prototype.ID = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.ID);
    } else {
        return this.getToken(JASSParser.ID, i);
    }
};


TypeDecContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterTypeDec(this);
	}
};

TypeDecContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitTypeDec(this);
	}
};

TypeDecContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitTypeDec(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.TypeDecContext = TypeDecContext;

JASSParser.prototype.typeDec = function() {

    var localctx = new TypeDecContext(this, this._ctx, this.state);
    this.enterRule(localctx, 68, JASSParser.RULE_typeDec);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 786;
        this.match(JASSParser.T__38);
        this.state = 787;
        this.match(JASSParser.WS);
        this.state = 788;
        localctx.name = this.match(JASSParser.ID);
        this.state = 789;
        this.match(JASSParser.WS);
        this.state = 790;
        this.match(JASSParser.T__39);
        this.state = 791;
        this.match(JASSParser.WS);
        this.state = 792;
        localctx.parent = this.match(JASSParser.ID);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NativeDecContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = JASSParser.RULE_nativeDec;
    this.name = null; // Token
    this.params = null; // FuncParam_listContext
    this.returnType = null; // FuncReturnTypeContext
    return this;
}

NativeDecContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NativeDecContext.prototype.constructor = NativeDecContext;

NativeDecContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(JASSParser.WS);
    } else {
        return this.getToken(JASSParser.WS, i);
    }
};


NativeDecContext.prototype.ID = function() {
    return this.getToken(JASSParser.ID, 0);
};

NativeDecContext.prototype.funcParam_list = function() {
    return this.getTypedRuleContext(FuncParam_listContext,0);
};

NativeDecContext.prototype.funcReturnType = function() {
    return this.getTypedRuleContext(FuncReturnTypeContext,0);
};

NativeDecContext.prototype.enterRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.enterNativeDec(this);
	}
};

NativeDecContext.prototype.exitRule = function(listener) {
    if(listener instanceof JASSListener ) {
        listener.exitNativeDec(this);
	}
};

NativeDecContext.prototype.accept = function(visitor) {
    if ( visitor instanceof JASSVisitor ) {
        return visitor.visitNativeDec(this);
    } else {
        return visitor.visitChildren(this);
    }
};




JASSParser.NativeDecContext = NativeDecContext;

JASSParser.prototype.nativeDec = function() {

    var localctx = new NativeDecContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, JASSParser.RULE_nativeDec);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 796;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===JASSParser.T__3) {
            this.state = 794;
            this.match(JASSParser.T__3);
            this.state = 795;
            this.match(JASSParser.WS);
        }

        this.state = 798;
        this.match(JASSParser.T__40);
        this.state = 799;
        this.match(JASSParser.WS);
        this.state = 800;
        localctx.name = this.match(JASSParser.ID);
        this.state = 801;
        this.match(JASSParser.WS);
        this.state = 802;
        this.match(JASSParser.T__34);
        this.state = 803;
        this.match(JASSParser.WS);
        this.state = 804;
        localctx.params = this.funcParam_list();
        this.state = 805;
        this.match(JASSParser.WS);
        this.state = 806;
        this.match(JASSParser.T__35);
        this.state = 807;
        this.match(JASSParser.WS);
        this.state = 808;
        localctx.returnType = this.funcReturnType();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


JASSParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch(ruleIndex) {
	case 6:
			return this.expr_sempred(localctx, predIndex);
    default:
        throw "No predicate with index:" + ruleIndex;
   }
};

JASSParser.prototype.expr_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.precpred(this._ctx, 14);
		case 1:
			return this.precpred(this._ctx, 8);
		case 2:
			return this.precpred(this._ctx, 6);
		case 3:
			return this.precpred(this._ctx, 12);
		default:
			throw "No predicate with index:" + predIndex;
	}
};


exports.JASSParser = JASSParser;
